<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:gridcommon="clr-namespace:Syncfusion.Windows.Controls.Scroll;assembly=Syncfusion.GridCommon.WPF"
                    xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF"
                    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/SkinManager/ShinyRedStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <LinearGradientBrush x:Key="PopupBackground" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FFB21B20" />
        <GradientStop Offset="1" Color="#FF9C1A1E" />
        <GradientStop Offset="0.496" Color="#FFDA9670" />
        <GradientStop Offset="0.217" Color="#FFD26A63" />
        <GradientStop Offset="0.783" Color="#FFCE7E74" />
    </LinearGradientBrush>

    <syncfusion:DateTimeFilterPaneHeightConverter x:Key="HeightConverter" />
    <syncfusion:DateTimeFilterPaneVisibleHeightConverter x:Key="VisibleHeightConverter" />
    <syncfusion:DateTimeVisiblityConverter x:Key="VisiblityConverter" />
    <sfshared:BooleanToVisibilityConverterEx x:Key="booleanToVisibilityConverter" />

    <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />
    <SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />

    <LinearGradientBrush x:Key="RadioButtonBackgroundBrushKey.ShinyRed" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFF1BCBE" />
        <GradientStop Offset="0.41800001263618469" Color="#FFCE6865" />
        <GradientStop Offset="0.418" Color="#FFAF231E" />
        <GradientStop Offset="1" Color="#FF601818" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="RadioButtonBorderBrushKey.ShinyRed" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#FFBBBBBB" />
        <GradientStop Offset="0.38" Color="#FF737373" />
        <GradientStop Offset="0.384" Color="#FF646464" />
        <GradientStop Offset="1" Color="#FF000000" />
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Offset="0" Color="#FFCB1C23" />
        <GradientStop Offset="1" Color="#FF8E191C" />
    </LinearGradientBrush>

    <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">

        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="CheckedFalse">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="CheckIcon"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedTrue">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="CheckIcon"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="Background"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="Background"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Ellipse x:Name="Background"
                                         Width="14"
                                         Height="14"
                                         Margin="1"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         StrokeThickness="2" />
                                <Ellipse x:Name="BackgroundOverlay"
                                         Width="12"
                                         Height="12"
                                         Margin="2,2,2,2"
                                         Fill="{StaticResource HighlightBrushKey.ShinyRed}"
                                         Opacity="0"
                                         Stroke="#00000000"
                                         StrokeThickness="0" />
                                <Border x:Name="CheckIcon"
                                        Width="6"
                                        Height="6"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Background="#FFFFFFFF"
                                        BorderBrush="{StaticResource PathFill.ShinyRed}"
                                        BorderThickness="1,1,1,1"
                                        CornerRadius="1,1,1,1"
                                        Visibility="Collapsed" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Name="content"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckIcon" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Background" Property="Fill" Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="Background" Property="Stroke" Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource DisabledTextBrushKey.ShinyRed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  CheckBox  -->

    <Style x:Key="EmptyCheckBoxFocusVisual.ShinyRed">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0"
                                   Stroke="#60000000"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="1"
                               SnapsToDevicePixels="true"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="CheckedFalse">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="CheckIcon"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedTrue">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="CheckIcon"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ThreeStateOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="IndeterminateIcon"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ThreeStateOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="IndeterminateIcon"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="Background"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="Background"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16" Height="16">
                                <Rectangle x:Name="Background"
                                           Width="14"
                                           Height="14"
                                           Margin="1"
                                           Fill="{TemplateBinding Background}"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Stroke="{TemplateBinding BorderBrush}"
                                           StrokeThickness="2" />
                                <Rectangle x:Name="BackgroundOverlay"
                                           Width="12"
                                           Height="12"
                                           Fill="{StaticResource HighlightBrushKey.ShinyRed}"
                                           Opacity="0"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Stroke="{x:Null}"
                                           StrokeThickness="1" />

                                <Path x:Name="CheckIcon"
                                      Width="11"
                                      Height="10"
                                      Data="M102.03442,598.79645 L105.22962,597.78918 L106.95686,599.19977 C106.95686,599.19977 113.77958,590.53656 113.77958,590.53656 C113.77958,590.53656 107.40649,603.79431 107.40649,603.79431 z"
                                      Fill="#FFFFFFFF"
                                      Stretch="Fill"
                                      Stroke="{StaticResource PathFill.ShinyRed}"
                                      StrokeThickness="0"
                                      Visibility="Collapsed" />

                                <Rectangle x:Name="IndeterminateIcon"
                                           Width="9"
                                           Height="9"
                                           Fill="#FFFFFFFF"
                                           Opacity="0"
                                           RadiusX="1"
                                           RadiusY="1"
                                           Stroke="{StaticResource PathFill.ShinyRed}" />
                                <Rectangle x:Name="DisabledVisualElement"
                                           Width="14"
                                           Height="14"
                                           Fill="{StaticResource DisabledBackgroundBrushKey.ShinyRed}"
                                           Opacity="0"
                                           RadiusX="1"
                                           RadiusY="1" />
                                <Rectangle x:Name="ContentFocusVisualElement"
                                           Width="16"
                                           Height="16"
                                           IsHitTestVisible="false"
                                           Opacity="0"
                                           RadiusX="2"
                                           RadiusY="2"
                                           Stroke="{StaticResource HighlightBrushKey.ShinyRed}"
                                           StrokeThickness="1" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Name="content"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckIcon" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ThreeStateOn1_BeginStoryboard" Storyboard="{StaticResource ThreeStateOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="ThreeStateOff1_BeginStoryboard" Storyboard="{StaticResource ThreeStateOff}" />
                            </Trigger.ExitActions>
                            <Setter TargetName="CheckIcon" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Background" Property="Fill" Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="Background" Property="Stroke" Value="{StaticResource BackgroundBrush}" />
                            <Setter TargetName="content" Property="TextBlock.Foreground" Value="{StaticResource DisabledTextBrushKey.ShinyRed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Radio Button  -->

    <ControlTemplate x:Key="ComboBoxToggleButton.ShinyRed" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="HoverRectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="HoverRectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Rectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetName="Rectangle"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="Rectangle"
                       Grid.ColumnSpan="2"
                       Width="Auto"
                       Height="Auto"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Fill="{StaticResource ButtonBackgroundBrushKey.ShinyRed}"
                       RadiusX="3"
                       RadiusY="3"
                       Stroke="{StaticResource ButtonBorderBrushKey.ShinyRed}"
                       StrokeThickness="2" />
            <Rectangle x:Name="HoverRectangle"
                       Grid.Column="1"
                       Grid.ColumnSpan="2"
                       Width="Auto"
                       Height="Auto"
                       Margin="0,2,2,2"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       Fill="{StaticResource HighlightBrushKey.ShinyRed}"
                       Opacity="0"
                       RadiusX="3"
                       RadiusY="3"
                       Stroke="{x:Null}"
                       StrokeThickness="2" />
            <Rectangle Grid.Column="0"
                       Width="Auto"
                       Height="Auto"
                       Margin="2,2,0,2"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch"
                       RadiusX="2"
                       RadiusY="2"
                       Stroke="{x:Null}">
                <Rectangle.Fill>
                    <SolidColorBrush Color="#FFFFFFFF" />
                </Rectangle.Fill>
            </Rectangle>
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Margin="-2,2,0,0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  Fill="{StaticResource GlyphBrushKey.ShinyRed}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Rectangle" Property="Fill" Value="{StaticResource DisabledBackgroundBrushKey.ShinyRed}" />
                <Setter TargetName="Rectangle" Property="Stroke" Value="{StaticResource DisabledBorderBrushKey.ShinyRed}" />
                <Setter Property="Foreground" Value="{StaticResource DisabledTextBrushKey.ShinyRed}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledTextBrushKey.ShinyRed}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox.ShinyRed" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Background="{TemplateBinding Background}"
                Focusable="False" />
    </ControlTemplate>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               Fill="{StaticResource PopupBackground}"
                               SnapsToDevicePixels="true"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3,0,3,0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{StaticResource PopupBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxItemBorderBrushKey.ShinyRed}" />
        <Setter Property="Foreground" Value="{StaticResource SliderTextBrushKey.ShinyRed}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="SelectedBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="SelectedBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                           Storyboard.TargetName="HoverBorder"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,1,0,1"
                          Background="{StaticResource PopupBackground}"
                          SnapsToDevicePixels="true">
                        <Border x:Name="Border"
                                Background="Red"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="SelectedBorder"
                                Background="Red"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Border x:Name="HoverBorder"
                                Background="Red"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <ContentPresenter Margin="5,2,0,2"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                            <!--  <Setter Property="Foreground" Value="#FFFFFFFF"/>  -->
                        </Trigger>


                        <Trigger Property="IsHighlighted" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledTextBrushKey.ShinyRed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}" />
        <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrushKey.ShinyRed}" />
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Foreground" Value="{StaticResource DefaultTextBrushKey.ShinyRed}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="4,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Grid.Column="2"
                                      ClickMode="Press"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,
                                                          Mode=TwoWay,
                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                      Template="{StaticResource ComboBoxToggleButton.ShinyRed}" />
                        <ContentPresenter x:Name="ContentSite"
                                          Margin="3,3,23,3"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False" />

                        <TextBox x:Name="PART_EditableTextBox"
                                 Margin="3,3,23,3"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Background="Transparent"
                                 Focusable="True"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox.ShinyRed}"
                                 Visibility="Hidden" />

                        <Popup x:Name="Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Background="{StaticResource PopupBackground}"
                                        BorderBrush="{StaticResource BackgroundBrush}"
                                        BorderThickness="1" />
                                <ScrollViewer Margin="4,6,4,6"
                                              CanContentScroll="True"
                                              HorizontalScrollBarVisibility="Auto"
                                              SnapsToDevicePixels="True"
                                              VerticalScrollBarVisibility="Auto">

                                    <!--  <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>  -->
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledTextBrushKey.ShinyRed}" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0" />
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="3,3,3,3" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false" />
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="{StaticResource ComboBoxBorderBrushKey.ShinyRed}" />
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                <Setter Property="Foreground" Value="{StaticResource DefaultTextBrushKey.ShinyRed}" />
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Padding" Value="3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton"
                                              Grid.Column="2"
                                              ClickMode="Press"
                                              Focusable="false"
                                              IsChecked="{Binding Path=IsDropDownOpen,
                                                                  Mode=TwoWay,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              Template="{StaticResource ComboBoxToggleButton.ShinyRed}" />
                                <ContentPresenter x:Name="ContentSite"
                                                  Margin="3,3,23,3"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  IsHitTestVisible="False" />

                                <TextBox x:Name="PART_EditableTextBox"
                                         Margin="3,3,23,3"
                                         HorizontalAlignment="Left"
                                         VerticalAlignment="Center"
                                         Background="Transparent"
                                         Focusable="True"
                                         IsReadOnly="{TemplateBinding IsReadOnly}"
                                         Style="{x:Null}"
                                         Template="{StaticResource ComboBoxTextBox.ShinyRed}"
                                         Visibility="Hidden" />

                                <Popup x:Name="Popup"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       Placement="Bottom"
                                       PopupAnimation="Slide">
                                    <Grid x:Name="DropDown"
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                          SnapsToDevicePixels="True">
                                        <Border x:Name="DropDownBorder"
                                                Background="{StaticResource BackgroundBrush}"
                                                BorderBrush="{StaticResource ComboBoxPopupBorderBrushKey.ShinyRed}"
                                                BorderThickness="1" />
                                        <ScrollViewer Margin="4,6,4,6"
                                                      CanContentScroll="True"
                                                      HorizontalScrollBarVisibility="Auto"
                                                      SnapsToDevicePixels="True"
                                                      VerticalScrollBarVisibility="Auto">

                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />

                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource DisabledTextBrushKey.ShinyRed}" />
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                                <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,0,0,0" />
                                    <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="3,3,3,3" />
                                </Trigger>
                                <Trigger Property="IsEditable" Value="true">
                                    <Setter Property="IsTabStop" Value="false" />
                                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EntryFieldStyle" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Chrome" SnapsToDevicePixels="true">
                        <Path x:Name="path"
                              Width="12"
                              Height="12"
                              Data="M19.85228,12.08996L12.093,19.849201 24.242323,31.997846 12.094,44.145998 19.852051,51.904958 32.001186,39.756277 44.150543,51.904958 51.909,44.145994 39.760246,31.997501 51.909,19.849201 44.15049,12.08996 32.001431,24.238849z M32,0C49.671021,3.1599484E-07 64,14.329407 64,31.998501 64,49.677606 49.671021,63.997003 32,63.997003 14.328003,63.997003 0,49.677606 0,31.998501 0,14.329407 14.328003,3.1599484E-07 32,0z"
                              Fill="White"
                              Stretch="Uniform">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <RotateTransform Angle="0" />
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Padding" Value="11,8,11,8" />
                            <Setter Property="FontSize" Value="18" />
                            <Setter TargetName="Chrome" Property="CornerRadius" Value="6" />

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="true" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Chrome" Property="Background" Value="Transparent" />
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Foreground" Value="Black" />
                        </MultiTrigger>

                        <Trigger Property="Button.IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FF181717" />
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="TextFilteringPaneStyle" TargetType="{x:Type syncfusion:GridDataTextFilteringPane}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type syncfusion:GridDataTextFilteringPane}">
                    <Border Width="230"
                            Height="130"
                            Background="{StaticResource PopupBackground}"
                            BorderBrush="Gray"
                            BorderThickness="0.5"
                            CornerRadius="0,4,0,4">
                        <Grid x:Name="LayoutRoot" Margin="5,0,5,5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Button x:Name="PART_CloseButton"
                                    Grid.Row="0"
                                    Width="15"
                                    Height="15"
                                    Margin="0,2,-3,0"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    BorderBrush="White"
                                    BorderThickness="0"
                                    Canvas.ZIndex="1"
                                    Style="{StaticResource CloseButtonStyle}"
                                    ToolTip="Close" />

                            <Border Grid.Row="1" Margin="3">
                                <StackPanel Orientation="Horizontal">
                                    <RadioButton x:Name="PART_ORRadioButton"
                                                 Content="OR"
                                                 Style="{StaticResource RadioButtonStyle}" />
                                    <RadioButton x:Name="PART_ANDRadioButton"
                                                 Margin="10,0,0,0"
                                                 Content="AND"
                                                 Style="{StaticResource RadioButtonStyle}" />
                                    <CheckBox x:Name="PART_CaseCheckBox"
                                              Margin="10,0,0,0"
                                              Content="MATCH CASE"
                                              Style="{StaticResource CheckBoxStyle}" />
                                </StackPanel>
                            </Border>

                            <ComboBox Name="PART_ComboBox"
                                      Grid.Row="2"
                                      Height="22"
                                      Margin="3"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      IsSynchronizedWithCurrentItem="True"
                                      SelectedValue="{Binding SelectedComboValue,
                                                              Mode=TwoWay,
                                                              UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource ComboBoxStyle}" />

                            <Grid Grid.Row="3" Margin="3">

                                <TextBox Name="PART_TextBox"
                                         Height="22"
                                         HorizontalContentAlignment="Left"
                                         Foreground="{TemplateBinding Foreground}"
                                         Text="{Binding Path=Text,
                                                        RelativeSource={RelativeSource TemplatedParent},
                                                        UpdateSourceTrigger=PropertyChanged}"
                                         TextWrapping="Wrap" />

                            </Grid>

                            <Button Name="PART_ClearButton"
                                    Grid.Row="4"
                                    Width="50"
                                    Height="20"
                                    Margin="3"
                                    HorizontalAlignment="Right"
                                    Content="Clear"
                                    Padding="0" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource TextFilteringPaneStyle}" TargetType="{x:Type syncfusion:GridDataTextFilteringPane}" />
</ResourceDictionary>