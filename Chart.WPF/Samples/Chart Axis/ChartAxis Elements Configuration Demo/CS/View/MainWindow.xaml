<layout:SampleLayoutWindow x:Class="ChartAxisElementsConfigurationDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:local="clr-namespace:ChartAxisElementsConfigurationDemo" 
        xmlns:layout="clr-namespace:Syncfusion.Windows.SampleLayout;assembly=Syncfusion.Chart.Wpf.SampleLayout"
        Title="ChartAxis Elements Configuration Demo">
    <Window.Resources>
       
    </Window.Resources>
        <Grid>
            <Grid.DataContext>
                <local:DataViewModel/>
            </Grid.DataContext>
            <syncfusion:Chart Name="Chart1">
                <syncfusion:ChartArea IsContextMenuEnabled="False" Palette="Metro">
                    <syncfusion:ChartArea.GridHeader>
                        <TextBlock Text="Car Sales Analysis" FontFamily="Segoe UI" FontSize="20"/>
                    </syncfusion:ChartArea.GridHeader>
                    <syncfusion:ChartArea.PrimaryAxis>
                        <syncfusion:ChartAxis x:Name="XAxis" TickLinesPosition="{Binding ElementName=XTickLinesPositioning,Path=SelectedItem,Mode=TwoWay}" SmallTicksPerInterval="{Binding ElementName=XSamllTicksPerInterval,Path=Text,Mode=TwoWay}" SmallTickSize="5" TickLinesRange="1" TickSize="15" RangePadding="Normal" Header="Number of Cars Sold" IsAutoSetRange="True">
                            <syncfusion:ChartAxis.LineStroke>
                                <Pen x:Name="pen1" Brush="#FFBABABA" Thickness="{Binding ElementName=XAxisLineThickness,Path=SelectedItem,Mode=TwoWay}"/>
                            </syncfusion:ChartAxis.LineStroke>
                            <syncfusion:ChartAxis.TickLineStroke>
                                <Pen x:Name="pen2" Brush="#FFBABABA" Thickness="{Binding ElementName=XAxisTickLineThickness,Path=SelectedItem,Mode=TwoWay}"/>
                            </syncfusion:ChartAxis.TickLineStroke>
                            <syncfusion:ChartAxis.SmallTickLineStroke>
                                <Pen x:Name="XSmallTickStroke" Brush="#FFBABABA" Thickness="{Binding ElementName=XSmallTickLineThickness,Path=SelectedItem,Mode=TwoWay}"/>
                            </syncfusion:ChartAxis.SmallTickLineStroke>
                            <syncfusion:ChartArea.GridLineStroke>
                                <Pen x:Name="GridLinePen" Brush="#FFBABABA" Thickness="{Binding ElementName=XMajorGridLineThickness,Path=SelectedItem,Mode=TwoWay}"/>
                            </syncfusion:ChartArea.GridLineStroke>
                            <syncfusion:ChartArea.SmallGridLineStroke>
                                <Pen x:Name="MinorGridLinePen" Brush="#FFBABABA" Thickness="{Binding ElementName=XMinorGridLineThikness,Path=SelectedItem,Mode=TwoWay}"/>
                            </syncfusion:ChartArea.SmallGridLineStroke>                            
                            <syncfusion:ChartArea.ShowOriginLine>True</syncfusion:ChartArea.ShowOriginLine>
                            <!--<syncfusion:ChartAxis.CustomLabels>
                                <syncfusion:ChartAxisLabel Content="Q1" Position="0"></syncfusion:ChartAxisLabel>
                                <syncfusion:ChartAxisLabel Content="Q2" Position="1"></syncfusion:ChartAxisLabel>
                                <syncfusion:ChartAxisLabel Content="Q3" Position="2"></syncfusion:ChartAxisLabel>
                                <syncfusion:ChartAxisLabel Content="Q4" Position="3"></syncfusion:ChartAxisLabel>
                            </syncfusion:ChartAxis.CustomLabels>-->
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.PrimaryAxis>
                    <syncfusion:ChartArea.SecondaryAxis>
                        <syncfusion:ChartAxis x:Name="YAxis" SmallTicksPerInterval="1" SmallTickSize="5" TickLinesRange="2" TickSize="15" RangePadding="Normal" Header="Sales Amount in millions(USD)" DesiredIntervalsCount="6">
                            <syncfusion:ChartAxis.LineStroke>
                                <Pen x:Name="pen3" Brush="#FFBABABA" Thickness="1"/>
                            </syncfusion:ChartAxis.LineStroke>
                            <syncfusion:ChartAxis.TickLineStroke>
                                <Pen x:Name="pen4" Brush="Black" Thickness="1"/>
                            </syncfusion:ChartAxis.TickLineStroke>
                            <syncfusion:ChartAxis.SmallTickLineStroke>
                                <Pen x:Name="YSmallTickStroke" Brush="Black" Thickness="1"/>
                            </syncfusion:ChartAxis.SmallTickLineStroke>
                            <syncfusion:ChartArea.GridLineStroke>
                                <Pen x:Name="YGridLinePen" Brush="#FFBABABA" Thickness="1"/>
                            </syncfusion:ChartArea.GridLineStroke>
                            <syncfusion:ChartArea.SmallGridLineStroke>
                                <Pen x:Name="YMinorGridLinePen" Brush="#FFBABABA" Thickness="1"/>
                            </syncfusion:ChartArea.SmallGridLineStroke>
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.SecondaryAxis>
                    <syncfusion:ChartSeries Type="Column" Label="Sales" Name="Series1" IsIndexed="True" DataSource="{Binding SalesDetails}" BindingPathX="CarsSold" BindingPathsY="EstimatedCost" ColorEach="True" Palette="Metro" StrokePalette="Metro">
                        <syncfusion:ChartSeries.AdornmentsInfo>
                        <syncfusion:ChartAdornmentInfo HorizontalAlignment="Center" VerticalAlignment="Bottom" Visible="True" SegmentLabelFontSize="20" AdornmentForeground="White" SegmentLabelFontFamily="Segoe UI" SegmentLabelFontWeight="Regular">
                            </syncfusion:ChartAdornmentInfo>
                        </syncfusion:ChartSeries.AdornmentsInfo>
                    </syncfusion:ChartSeries>
                </syncfusion:ChartArea>
            </syncfusion:Chart>
        </Grid>
    <layout:SampleLayoutWindow.UserOptionsLayout>
        <Grid>
            <Grid.DataContext>
                <local:DataViewModel/>
            </Grid.DataContext>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Primary Axis Options" HorizontalAlignment="Left" FontSize="16" FontFamily="Segoe UI" FontWeight="SemiBold" Margin="0,0,0,20" />
            <Expander Header="Axis GridLines Customization Options" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Text="Line Stroke" Grid.Row="0" Grid.Column="0"/>
                    <syncfusion:ColorPicker Grid.Row="0" Grid.Column="1" x:Name="XAxisLineStroke" Brush="{Binding ElementName=pen1, Path=Brush, Mode=TwoWay}"/>

                    <TextBlock Text="Axis Line Thickness" Grid.Row="1" Grid.Column="0"/>
                    <ComboBox Name="XAxisLineThickness" ItemsSource="{Binding ThicknessCollection}" SelectedIndex="1" Grid.Row="1" Grid.Column="1"/>

                    <TextBlock Text="Major Grid Line Stroke" Grid.Row="2" Grid.Column="0"/>
                    <syncfusion:ColorPicker x:Name="MinorGridlineBrush" Brush="{Binding ElementName=GridLinePen, Path=Brush, Mode=TwoWay}"  Grid.Row="2" Grid.Column="1"/>

                    <TextBlock Text="Major Grid Line Thickness" Grid.Row="3" Grid.Column="0"/>
                    <ComboBox Name="XMajorGridLineThickness"  Grid.Row="3" Grid.Column="1" ItemsSource="{Binding ThicknessCollection}" SelectedIndex="1"/>

                    <TextBlock Text="Minor Grid Line Stroke" Grid.Row="4" Grid.Column="0"/>
                    <syncfusion:ColorPicker x:Name="GridLineBrush" Grid.Row="4" Grid.Column="1" Brush="{Binding ElementName=MinorGridLinePen, Path=Brush, Mode=TwoWay}" />

                    <TextBlock Text="Minor Grid Line Thickness" Grid.Row="5" Grid.Column="0"/>
                    <ComboBox Grid.Row="5" Grid.Column="1" Name="XMinorGridLineThikness" ItemsSource="{Binding ThicknessCollection}" SelectedIndex="1"/>
                    
                </Grid>
            </Expander>
            <Expander Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Header="Tick Lines Customization" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Text="Tick Line Stroke" Grid.Row="0" Grid.Column="0"/>
                    <syncfusion:ColorPicker Brush="{Binding ElementName=pen2, Mode=TwoWay, Path=Brush}" Grid.Row="0" Grid.Column="1"/>

                    <TextBlock Text="Tick Size" Grid.Row="1" Grid.Column="0"/>
                    <TextBox Text="{Binding ElementName=XAxis, Path=TickSize, Mode=TwoWay}" Grid.Row="1" Grid.Column="1"/>

                    <TextBlock Text="Tick Line Thickness" Grid.Row="2" Grid.Column="0"/>
                    <ComboBox  Name="XAxisTickLineThickness" ItemsSource="{Binding ThicknessCollection}" SelectedIndex="1" Grid.Row="2" Grid.Column="1"/>

                    <TextBlock Text="Tick Line Positioning" Grid.Row="3" Grid.Column="0"/>
                    <ComboBox Grid.Row="3" Grid.Column="1" x:Name="XTickLinesPositioning" ItemsSource="{Binding TickLinesPositioning}" SelectedIndex="1"/>

                </Grid>
            </Expander>
            <Expander Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Header="SmallTickLines Customization" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Samll Tick Line Stroke" Grid.Row="0" Grid.Column="0"/>
                    <syncfusion:ColorPicker x:Name="XAxisSmallTickLineStroke" Brush="{Binding ElementName=XSmallTickStroke, Path=Brush, Mode=TwoWay}" Grid.Row="0" Grid.Column="1"/>

                    <TextBlock Text="Small Tick Size" Grid.Row="1" Grid.Column="0"/>
                    <TextBox Text="{Binding ElementName=XAxis, Path=SmallTickSize, Mode=TwoWay}" Grid.Row="1" Grid.Column="1" />

                    <TextBlock Text="Small Tick Line Thickness" Grid.Row="2" Grid.Column="0"/>
                    <ComboBox Grid.Row="2" Grid.Column="1" Name="XSmallTickLineThickness"  ItemsSource="{Binding ThicknessCollection}" SelectedIndex="1"/>

                    <TextBlock Text="Small Ticks Per Interval" Grid.Row="3" Grid.Column="0" />
                    <TextBox Name="XSamllTicksPerInterval"  Text="1" Grid.Row="3" Grid.Column="1" />
                </Grid>
            </Expander>
            <Expander Header="Axis Positioning and Origin Properties" IsExpanded="False" Grid.Row="4" Grid.ColumnSpan="2">      
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <!--<TextBlock Text="Is Origin Centered" Grid.Row="0" Grid.Column="0"/>
                    <CheckBox x:Name="XAxisIsOriginCentered" Grid.Row="0" Grid.Column="1" IsChecked="{Binding ElementName=XAxis, Path=IsOriginCentered, Mode=TwoWay}"/>-->

                    <TextBlock Text="Origin" Grid.Row="1" Grid.Column="0"/>
                    <TextBox x:Name="XAxisOrigin" Grid.Row="1" Grid.Column="1" Text="{Binding ElementName=XAxis, Path=Origin, Mode=TwoWay}"/>

                    <TextBlock Text="Is Inversed" Grid.Row="2" Grid.Column="0"/>
                    <CheckBox x:Name="XAxisIsInversed" Grid.Row="2" Grid.Column="1" IsChecked="{Binding ElementName=XAxis, Path=IsInversed, Mode=TwoWay}"/>

                    <TextBlock Text="Opposed Position" Grid.Row="3" Grid.Column="0"/>
                    <CheckBox x:Name="XAxisOpposedPosition" Grid.Row="3" Grid.Column="1" IsChecked="{Binding ElementName=XAxis, Path=OpposedPosition, Mode=TwoWay}"/>
                    
                    
                    <TextBlock Text="Axis Visibility" Grid.Row="4" Grid.Column="0"/>
                    <ComboBox x:Name="XAxisVisibility" Grid.Row="4" Grid.Column="1" ItemsSource="{Binding VisibilityCollection}" SelectedItem="{Binding ElementName=XAxis, Path=AxisVisibility, Mode=TwoWay}" />

                    <!--<TextBlock Text="IntersectAction" Grid.Row="1" Grid.Column="0"/>
                    <ComboBox x:Name="XAxisIntersectAction" ItemsSource="{Binding IntersectActionCollection}" Grid.Row="1" Grid.Column="1" SelectedIndex="0" SelectedItem="{Binding ElementName=XAxis, Path=IntersectAction, Mode=TwoWay}" />-->


                     <!--<TextBlock Text="Orientation"  Grid.Row="19" Grid.Column="0"/>
                    <ComboBox x:Name="XAxisOrientation" ItemsSource="{Binding OrientationCollection}" Grid.Row="19" Grid.Column="1" SelectedItem="{Binding ElementName=XAxis, Path=Orientation, Mode=TwoWay}" />-->
</Grid>
            </Expander>
        </Grid>
            
            <!--<Expander Header="Secondary Axis" Grid.Row="1" Grid.ColumnSpan="2" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>                       
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="AxisVisibility" Grid.Row="0" Grid.Column="0"/>
                    <ComboBox x:Name="YAxisVisibility" Grid.Row="0" Grid.Column="1" ItemsSource="{Binding VisibilityCollection}" SelectedItem="{Binding ElementName=YAxis, Path=AxisVisibility, Mode=TwoWay}" />

                    <TextBlock Text="IntersectAction" Grid.Row="1" Grid.Column="0"/>
                    <ComboBox x:Name="YAxisIntersectAction1" ItemsSource="{Binding IntersectActionCollection}" Grid.Row="1" Grid.Column="1" SelectedIndex="2" SelectedItem="{Binding ElementName=YAxis, Path=IntersectAction, Mode=TwoWay}" />

                    <TextBlock Text="Orientation"  Grid.Row="2" Grid.Column="0"/>
                    <ComboBox x:Name="YAxisOrientation" ItemsSource="{Binding OrientationCollection}" Grid.Row="2" Grid.Column="1" SelectedItem="{Binding ElementName=YAxis, Path=Orientation, Mode=TwoWay}" />

                    <TextBlock Text="Origin" Grid.Row="3" Grid.Column="0"/>
                    <TextBox x:Name="YAxisOrigin" Grid.Row="3" Grid.Column="1" Text="{Binding ElementName=YAxis, Path=Origin, Mode=TwoWay}"/>

                    <TextBlock Text="Is Inversed" Grid.Row="4" Grid.Column="0"/>
                    <CheckBox x:Name="YAxisIsInversed" Grid.Row="4" Grid.Column="1" IsChecked="{Binding ElementName=YAxis, Path=IsInversed, Mode=TwoWay}"/>

                    <TextBlock Text="IsOriginCentered" Grid.Row="5" Grid.Column="0"/>
                    <CheckBox x:Name="YAxisIsOriginCentered" Grid.Row="5" Grid.Column="1" IsChecked="{Binding ElementName=YAxis, Path=IsOriginCentered, Mode=TwoWay}"/>

                    <TextBlock Text="OpposedPosition" Grid.Row="6" Grid.Column="0"/>
                    <CheckBox x:Name="YAxisIsOpposedPosition" Grid.Row="6" Grid.Column="1" IsChecked="{Binding ElementName=YAxis, Path=OpposedPosition, Mode=TwoWay}"/>

                    <TextBlock Text="TickSize" Grid.Row="7" Grid.Column="0"/>
                    <TextBox Text="{Binding ElementName=YAxis, Path=TickSize, Mode=TwoWay}" Grid.Row="7" Grid.Column="1"/>

                    <TextBlock Text="Tick Line Stroke" Grid.Row="8" Grid.Column="0"/>
                    <syncfusion:ColorPicker Brush="{Binding ElementName=pen4, Mode=TwoWay, Path=Brush}" Grid.Row="8" Grid.Column="1"/>

                    <TextBlock Text="Tick Line Thickness" Grid.Row="9" Grid.Column="0"/>
                    <TextBox Text="{Binding ElementName=pen4, Path=Thickness, Mode=TwoWay}" Grid.Row="9" Grid.Column="1"/>

                    <TextBlock Text="SmallTickSize" Grid.Row="10" Grid.Column="0"/>
                    <TextBox Text="{Binding ElementName=YAxis, Path=SmallTickSize, Mode=TwoWay}" Grid.Row="10" Grid.Column="1" />

                    <TextBlock Text="SmallTicks PerInterval" Grid.Row="11" Grid.Column="0" />
                    <TextBox Text="{Binding ElementName=YAxis, Path=SmallTicksPerInterval, Mode=TwoWay}" Grid.Row="11" Grid.Column="1" />

                    <TextBlock Text="LineStroke" Grid.Row="12" Grid.Column="0"/>
                    <syncfusion:ColorPicker x:Name="YAxisLineStroke" Brush="{Binding ElementName=pen3, Path=Brush, Mode=TwoWay}" Grid.Row="12" Grid.Column="1"/>

                    <TextBlock Text="SamllTickLineStroke" Grid.Row="13" Grid.Column="0"/>
                    <syncfusion:ColorPicker x:Name="YAxisSmallTickLineStroke" Brush="{Binding ElementName=YSmallTickStroke, Path=Brush, Mode=TwoWay}" Grid.Row="13" Grid.Column="1"/>

                    <TextBlock Text="GridLineStroke" Grid.Row="14" Grid.Column="0"/>
                    <syncfusion:ColorPicker x:Name="YMinorGridlineBrush" Brush="{Binding ElementName=YGridLinePen, Path=Brush, Mode=TwoWay}"  Grid.Row="14" Grid.Column="1"/>

                    <TextBlock Text="MinorGridLineStroke" Grid.Row="15" Grid.Column="0"/>
                    <syncfusion:ColorPicker x:Name="YGridLineBrush"  Brush="{Binding ElementName=YMinorGridLinePen, Path=Brush, Mode=TwoWay}"  Grid.Row="15" Grid.Column="1"/>
                </Grid>
            </Expander>-->
        <!--</Grid>-->
    </layout:SampleLayoutWindow.UserOptionsLayout>
</layout:SampleLayoutWindow>
