<layout:SampleLayoutWindow x:Class="Doughtnut.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:library="clr-namespace:System;assembly=mscorlib"
        xmlns:layout="clr-namespace:Syncfusion.Windows.SampleLayout;assembly=Syncfusion.Chart.Wpf.SampleLayout"
        xmlns:local="clr-namespace:Doughtnut"
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        xmlns:frame="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    Title="Doughnut Chart Demo" >
    <layout:SampleLayoutWindow.Resources>
        <DataTemplate x:Key="LegendTemplate1">
            <StackPanel Orientation="Horizontal" Margin="{Binding ItemMargin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:ChartLegend}}}" >

                <CheckBox Name="chbox" IsChecked="{Binding CorrespondingPoints[0].DataPoint.Visible, Mode=TwoWay}"
                   VerticalAlignment="Center"
                    Margin="{Binding ElementMargin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:ChartLegend}}}" Tag="{Binding}"
                    Visibility="{Binding CheckBoxVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:ChartLegend}}}" />

                <Ellipse Fill="{Binding Interior}" Height="15" Width="15" Visibility="{Binding IconVisibility, RelativeSource={RelativeSource AncestorType={x:Type syncfusion:ChartLegend}},Mode=TwoWay}"/>

                <TextBlock Margin="2,0,0,0" Height="20" Text="{Binding Path=CorrespondingPoints[0].DataPoint.Tag.category}" Width="Auto" Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type syncfusion:ChartLegend}}}"  />
            </StackPanel>
        </DataTemplate>
        <local:Labelconvertor x:Key="labelconvert"/>
        <local:TooltipConverter x:Key="tooltipConverter1"  />
        <local:InteriorConverter x:Key="interior"/>
        <DataTemplate x:Key="LabelsTemplate">
            <Grid>
                <!--<Rectangle Stroke="#FFAEAEAE" RadiusY="5" RadiusX="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDADADA" Offset="1"/>
                            <GradientStop Color="Transparent"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>

                <TextBlock  Margin="7.5,3,7.5,3" TextWrapping="Wrap" Text="{Binding Converter={StaticResource labelconvert}}" FontSize="12" Foreground="Black" FontFamily="Segoe UI Symbol" FontWeight="Regular" VerticalAlignment="Center" HorizontalAlignment="Center"/>-->
<TextBlock  Margin="7.5,3,7.5,3" TextWrapping="Wrap" Text="{Binding Converter={StaticResource labelconvert}}" FontSize="25" Foreground="White" Opacity="0.5" FontFamily="Segoe UI Symbol" FontWeight="Regular" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Grid>
        </DataTemplate>
        <ToolTip x:Key="CustomTooltips"  >
            <ToolTip.Template>
                <ControlTemplate>
                    <Grid>
                        <Rectangle Stroke="{Binding Converter={StaticResource interior}}" RadiusY="5" RadiusX="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDADADA" Offset="1"/>
                                    <GradientStop Color="White"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Margin="15,3,15,0" Text="{Binding CorrespondingPoints[0].DataPoint.StringItem}" FontSize="13" FontFamily="Segoe UI" FontWeight="SemiBold"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock  Margin="15,0,0,3" TextWrapping="Wrap" Text="{Binding CorrespondingPoints[0].DataPoint.Y}" FontSize="15" Foreground="{Binding Converter={StaticResource interior}}" FontFamily="Segoe UI" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock  Margin="0,0,15,3" Text=" %" FontSize="15" Foreground="{Binding Converter={StaticResource interior}}" FontFamily="Segoe UI" FontWeight="SemiBold" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </StackPanel>

                    </Grid>
                </ControlTemplate>
            </ToolTip.Template>

        </ToolTip>
        <DataTemplate x:Key="ConnectorTemplate">
            <Line X1="0" X2="12" Y1="0" Y2="0" Stroke="Black"/>
        </DataTemplate>
        <ObjectDataProvider x:Key="horizontalAlignment" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="frame:HorizontalAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="verticalAlignment" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="frame:VerticalAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="chartStyles" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:ChartStyles"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <DataTemplate x:Key="adornment">
            <Grid>
                <!--<Rectangle Stroke="#FFAEAEAE" RadiusY="5" RadiusX="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDADADA" Offset="1"/>
                            <GradientStop Color="White"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBlock  Margin="7.5,3,7.5,3" TextWrapping="Wrap" Text="{Binding}" FontSize="12" Foreground="#FF585858" FontFamily="Segoe UI Symbol" FontWeight="Regular" VerticalAlignment="Center" HorizontalAlignment="Center">
                </TextBlock>-->
                
            </Grid>
        </DataTemplate>
    </layout:SampleLayoutWindow.Resources>
    <!--Root layout, splitting into two rows and two columns-->
        <Grid>
            <Grid.DataContext>
                <local:DoughtnutChartViewModel/>
            </Grid.DataContext>

            <!--Hosting Chart control in second Row of the Grid-->
            <syncfusion:Chart Name="Chart1" Grid.Row="1" >
                <syncfusion:Chart.Header>
                    <TextBlock FontSize="20" FontWeight="Regular" FontFamily="Segoe UI" Margin="0,20,0,10"> 2011 State Government Tax Collections - U.S</TextBlock>
                </syncfusion:Chart.Header>
                <!--Chart area to present chart segments-->
                <syncfusion:ChartArea  BorderThickness="0" RenderTransformOrigin="0.5,0.5" >
                    <syncfusion:ChartArea.ColorModel>
                        <syncfusion:ChartStyleModel x:Name="AreaColorModel" Palette="Metro"/>
                    </syncfusion:ChartArea.ColorModel>
                    <!--Chart 1st series declaration-->
                    <syncfusion:ChartSeries Name="Series1" EnableEffects="{Binding ElementName=check3, Path=IsChecked, Mode=TwoWay}" syncfusion:ChartDoughnutType.ExplodedAll="{Binding ElementName=checkBox2, Path=IsChecked}" 
                                         syncfusion:ChartDoughnutType.ExplodedIndex="{Binding ElementName=comboExplode,Path=SelectedItem}" 
                                         syncfusion:ChartDoughnutType.ExplodeRadius="{Binding ElementName=comboExploderadius,Path=SelectedItem}" 
                                         syncfusion:ChartDoughnutType.DoughnutCoefficient="{Binding ElementName=comboDoughnetCoeff,Path=SelectedItem}" 
                                         Type="Doughnut" ToolTip="{StaticResource CustomTooltips}" StrokeThickness="0" Label="Team Score" BindingPathX="category" BindingPathsY="percent" DataSource="{Binding Tax}">
                        <!--Chart series Adornment declaation-->
                        <syncfusion:ChartSeries.AdornmentsInfo>
                            <syncfusion:ChartAdornmentInfo  x:Name="Adornments"   LabelContentPath="DataPoint.Tag" Visible="True"  SegmentShowLine="False" SegmentHorizontalAlignment="Center" SegmentVerticalAlignment="Top" LabelTemplate="{StaticResource LabelsTemplate}" ConnectorTemplate="{StaticResource ConnectorTemplate}"/>
                        </syncfusion:ChartSeries.AdornmentsInfo>
                    </syncfusion:ChartSeries>
                    <!--ChartArea Legend declaration-->
                    <syncfusion:ChartArea.Legend>
                        <syncfusion:ChartLegend ElementMargin="5" ItemMargin="5,0,5,0" RowsCount="2" CornerRadius="0"  ItemTemplate="{StaticResource LegendTemplate1}" CheckBoxVisibility="Visible"  BorderThickness="1"/>
                    </syncfusion:ChartArea.Legend>
                </syncfusion:ChartArea>
            </syncfusion:Chart>
        </Grid>
    <!--Other Controls to provide dynamic property settings for chart control-->
    <layout:SampleLayoutWindow.UserOptionsLayout>        
                <Grid>
            <Grid.DataContext>
                <local:DoughtnutChartViewModel/>
            </Grid.DataContext>
            <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Expander  Grid.Row="1" Grid.ColumnSpan="2" Header="Properties" IsExpanded="True">
                        <Grid Margin="0,10,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <!--<TextBlock Grid.Row="0" Grid.Column="0" Text="ShowTicks" />
                            <CheckBox Grid.Row="0" Grid.Column="1" Name="checkBox_ticks" IsEnabled="{Binding ElementName=chb, Path=IsChecked, Mode=TwoWay}" IsChecked="{Binding ElementName=Adornments, Path=SegmentShowLine, Mode=TwoWay}" />-->
                            <!--Select the radius of the circle inside doughnut-->
                            <TextBlock Grid.Row="2" Grid.Column="0" Name="textBlock_doughnet_coff" Text="Doughnut Coeffcients"/>
                            <ComboBox Grid.Row="2" Grid.Column="1" Name="comboDoughnetCoeff" SelectedIndex="1" IsEnabled="True">
                                <library:String>0.1</library:String>
                                <library:String>0.3</library:String>
                                <library:String>0.5</library:String>
                            </ComboBox>

                            <!--Check box to enable/disable ExplodeAll Option-->
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Explode All"/>
                            <CheckBox Grid.Row="3" Grid.Column="1" Name="checkBox2" />
                            <!--Check box to Enable effect Option-->
                            <TextBlock Grid.Row="4" Grid.Column="0" Text="Enable Effects"/>
                            <CheckBox Grid.Row="4" Grid.Column="1" Name="check3" IsChecked="False"/>
                            <!--Select the exploded index-->

                            <TextBlock Grid.Row="5" Grid.Column="0" Name="textBlock5" Text="Explode Index" />
                            <ComboBox Grid.Row="5" Grid.Column="1" Name="comboExplode" SelectedIndex="0" >
                                <library:Int32>-1</library:Int32>
                                <library:Int32>0</library:Int32>
                                <library:Int32>1</library:Int32>
                                <library:Int32>2</library:Int32>
                                <library:Int32>3</library:Int32>
                                <library:Int32>4</library:Int32>
                                <library:Int32>5</library:Int32>
                                <library:Int32>6</library:Int32>
                            </ComboBox>
                            <!--Select the radius exploded index-->
                            <TextBlock Grid.Row="6" Grid.Column="0" Name="textBlock6" Text="Explode Radius" />
                            <ComboBox Grid.Row="6" Grid.Column="1" Name="comboExploderadius" SelectedIndex="4">
                                <library:String>0.0</library:String>
                                <library:String>2.0</library:String>
                                <library:String>4.0</library:String>
                                <library:String>6.0</library:String>
                                <library:String>8.0</library:String>
                                <library:String>10.0</library:String>
                            </ComboBox>
                        </Grid>
            </Expander>
            <Expander Grid.Row="2" Grid.ColumnSpan="2" Header="DataLabels" IsExpanded="True">
                        <Grid Margin="0,10,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="ShowDataLabels"/>
                    <CheckBox Grid.Row="0" Grid.Column="1" Name="chb" IsChecked="{Binding ShowDataLabels, ElementName=Series1, Mode=TwoWay}"/>

                           
                        </Grid>
            </Expander>
            <Expander Grid.Row="0" Grid.ColumnSpan="2" Header="Palette" IsExpanded="True">
                        <Grid Margin="0,10,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>

                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Palette"/>
                            <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding PaletteCollection}" SelectedItem="{Binding Palette, ElementName=AreaColorModel, Mode=TwoWay}"/>
                        </Grid>
            </Expander>
                </Grid>
        </layout:SampleLayoutWindow.UserOptionsLayout>

</layout:SampleLayoutWindow>
