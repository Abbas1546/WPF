<layout:SampleLayoutWindow x:Class="StackingBarChart.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:StackingBarChart"
        xmlns:layout="clr-namespace:Syncfusion.Windows.SampleLayout;assembly=Syncfusion.Chart.Wpf.SampleLayout"
        xmlns:frame="clr-namespace:System.Windows;assembly=PresentationFramework"
        Title="StackingBar Chart Demo" x:Name="window1">
    <layout:SampleLayoutWindow.Resources>
        <ObjectDataProvider x:Key="horizontalAlignment" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="frame:HorizontalAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="verticalAlignment" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="frame:VerticalAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="chartStyles" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:ChartStyles"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="chartColorPalette" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:ChartColorPalette"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="adornmentsPosition" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:AdornmentsPosition"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </layout:SampleLayoutWindow.Resources>
    <!--Root layout, splitting into two rows and two columns-->
        <Grid>
            <Grid.DataContext>
                <local:StackingBarChartViewModel />
            </Grid.DataContext>
            <!--Chart Legend declaration-->
            <syncfusion:Chart  Name="Chart1" >
                <!--Chart area to present chart segments-->
                <syncfusion:ChartArea IsContextMenuEnabled="False" Padding="5" syncfusion:ChartType.Spacing="0.4">
                    <syncfusion:ChartArea.Legend>
                        <syncfusion:ChartLegend syncfusion:Chart.Dock="Bottom"/>
                    </syncfusion:ChartArea.Legend>
                    <syncfusion:ChartArea.GridHeader>
                        <TextBlock FontSize="20" FontWeight="Regular" FontFamily="Segoe UI" Margin="0,0,0,20">Gold Inventory Analysis</TextBlock>
                    </syncfusion:ChartArea.GridHeader>
                    <syncfusion:ChartArea.ColorModel>
                        <syncfusion:ChartStyleModel x:Name="AreaColorModel" Palette="Metro"/>
                    </syncfusion:ChartArea.ColorModel>
                    <!--Primary Axis(X)-->
                    <syncfusion:ChartArea.PrimaryAxis>
                        <!--X axis declaration with required property settings-->
                        <syncfusion:ChartAxis Header="Year" RangePadding="Normal" PositionPath="ProdId" ContentPath="Prodname" LabelsSource="{Binding Products}"/>
                    </syncfusion:ChartArea.PrimaryAxis>
                    <!--Secondary Axis(Y)-->
                    <syncfusion:ChartArea.SecondaryAxis>
                        <!--Y axis declaration with required property settings-->
                        <syncfusion:ChartAxis Header="Gold OZ (x1000)" RangePadding="Normal" IsAutoSetRange="True"/>
                    </syncfusion:ChartArea.SecondaryAxis>
                    <!--Chart 1st series declaration-->
                    <syncfusion:ChartSeries x:Name="series1" Stroke="{Binding Interior, ElementName=series1, Mode=TwoWay}" Label="Inferred" BindingPathX="YEAR" BindingPathsY="Inferred" DataSource="{Binding GoldInventoryDetails}" Type="StackingBar" >
                        <syncfusion:ChartSeries.AdornmentsInfo>
                        <syncfusion:ChartAdornmentInfo x:Name="Adornments_Inferred" Visible="True" HorizontalAlignment="Left" VerticalAlignment="Center" SegmentLabelRotation="45" AdornmentFontStretch="Expanded" SegmentLabelFontSize="20" AdornmentForeground="White" SegmentLabelFontFamily="Segoeui" SegmentLabelFontWeight="Light" AdornmentMargin="0,0,10,0" />
                        </syncfusion:ChartSeries.AdornmentsInfo>
                    </syncfusion:ChartSeries>
                    <!--Chart 2nd series declaration-->
                    <syncfusion:ChartSeries x:Name="series2" Stroke="{Binding Interior, ElementName=series2, Mode=TwoWay}" Label="Measured" BindingPathX="YEAR" BindingPathsY="Measured" DataSource="{Binding GoldInventoryDetails}" Type="StackingBar" >
                        <syncfusion:ChartSeries.AdornmentsInfo>
                        <syncfusion:ChartAdornmentInfo x:Name="Adornments_Measured" Visible="True" HorizontalAlignment="Left" VerticalAlignment="Center" SegmentLabelRotation="45" AdornmentFontStretch="Expanded" SegmentLabelFontSize="20" AdornmentForeground="White" SegmentLabelFontFamily="Segoeui" SegmentLabelFontWeight="Light" AdornmentMargin="0,0,10,0" />
                        </syncfusion:ChartSeries.AdornmentsInfo>
                    </syncfusion:ChartSeries>
                    <!--Chart 3rd series declaration-->
                    <syncfusion:ChartSeries x:Name="series3" Stroke="{Binding Interior, ElementName=series3, Mode=TwoWay}" Label="Reserves" BindingPathX="YEAR" BindingPathsY="Reserves" DataSource="{Binding GoldInventoryDetails}" Type="StackingBar" >
                        <syncfusion:ChartSeries.AdornmentsInfo>
                        <syncfusion:ChartAdornmentInfo x:Name="Adornments_Reserves" Visible="True" HorizontalAlignment="Left" VerticalAlignment="Center" SegmentLabelRotation="45" AdornmentFontStretch="Expanded" SegmentLabelFontSize="20" AdornmentForeground="White" SegmentLabelFontFamily="Segoeui" SegmentLabelFontWeight="Light" AdornmentMargin="0,0,10,0" />
                        </syncfusion:ChartSeries.AdornmentsInfo>
                    </syncfusion:ChartSeries>
                </syncfusion:ChartArea>
            </syncfusion:Chart>

        </Grid>
    <layout:SampleLayoutWindow.UserOptionsLayout>
        <!--Other Controls to provide dynamic property settings for chart control-->
        <Grid>
            <Grid.DataContext>
                <local:StackingBarChartViewModel />
            </Grid.DataContext>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>



            <TextBlock Grid.Row="0" Grid.Column="0" Text="Palette" HorizontalAlignment="Left" FontWeight="SemiBold"/>
            <Grid Margin="0,10,0,20" Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Palette"/>
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding PaletteCollection}" SelectedItem="{Binding Palette, ElementName=AreaColorModel, Mode=TwoWay}"/>
                </Grid>
           

        </Grid>
    </layout:SampleLayoutWindow.UserOptionsLayout>
</layout:SampleLayoutWindow>


