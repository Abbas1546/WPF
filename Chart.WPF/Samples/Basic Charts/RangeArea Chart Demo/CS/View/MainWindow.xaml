<layout:SampleLayoutWindow x:Class="RangeArea.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:layout="clr-namespace:Syncfusion.Windows.SampleLayout;assembly=Syncfusion.Chart.Wpf.SampleLayout"
        xmlns:local="clr-namespace:RangeArea"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"  
        xmlns:frame="clr-namespace:System.Windows;assembly=PresentationFramework"
    Title="RangeArea Chart Demo" x:Name="window1" >
    <layout:SampleLayoutWindow.Resources>
        <ObjectDataProvider x:Key="horizontalAlignment" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="frame:HorizontalAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="verticalAlignment" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="frame:VerticalAlignment"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="symbol" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:Symbol"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="adornmentsPosition" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:AdornmentsPosition"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
    </layout:SampleLayoutWindow.Resources>
    <!--Root layout, splitting into two rows and two columns-->
        <Grid >
            <Grid.DataContext>
                <local:RangeAreaChartViewModel/>
            </Grid.DataContext>

            <!--Chart Legend declaration-->
            <syncfusion:Chart Name="Chart1" >
               

                <!--Chart area to present chart segments-->
                <syncfusion:ChartArea IsContextMenuEnabled="False" >
                    <syncfusion:ChartArea.GridHeader>
                        <TextBlock FontSize="20" FontWeight="Regular" FontFamily="Segoe UI" Margin="0,0,0,20">2011 - Inflation Analysis</TextBlock>
                    </syncfusion:ChartArea.GridHeader>
                    <syncfusion:ChartArea.ColorModel>
                        <syncfusion:ChartStyleModel x:Name="AreaColorModel" Palette="Metro"/>
                    </syncfusion:ChartArea.ColorModel>
                    <!--Settings for 3D chart such as Backwall thickness, ShowBackWall, etc..-->
                    <syncfusion:ChartArea.Chart3DSettings>
                        <syncfusion:Chart3D BackWallThickness="0" ShowBackWall="False" LeftWallBackground="Transparent" LeftWallThickness="0" BottomWallBackground="Transparent" BottomWallThickness="0"/>
                    </syncfusion:ChartArea.Chart3DSettings>
                    <!--Primary Axis(X)-->
                    <syncfusion:ChartArea.PrimaryAxis>
                        <!--X axis declaration with required property settings-->
                        <syncfusion:ChartAxis Header="Months" RangePadding="Normal" LabelFontSize="11"  EdgeLabelsDrawingMode="Fit"   Interval="1" />
                    </syncfusion:ChartArea.PrimaryAxis>
                    <!--Secondary Axis(Y)-->
                    <syncfusion:ChartArea.SecondaryAxis>
                        <!--Y axis declaration with required property settings-->
                        <syncfusion:ChartAxis Header="Inflation Rate (%)" Interval="1" RangePadding="Normal" IsAutoSetRange="True"  LabelFontSize="11"  />
                    </syncfusion:ChartArea.SecondaryAxis>
                <syncfusion:ChartSeries Label="Inflation" x:Name="Inflation" BindingPathX="Month" BindingPathsY="Min,Max" DataSource="{Binding Inflation}" Type="RangeArea" Stroke="White">
                    <syncfusion:ChartSeries.AdornmentsInfo>
                            <syncfusion:ChartAdornmentInfo Symbol="Ellipse" 
                                                           SymbolWidth="15" 
                                                           SymbolHeight="15"
                                                           SymbolInterior="#FFF09609"
                                                           SymbolStroke="White"
                                                           SymbolStrokeThickness="3"
                                                           HorizontalAlignment="Center" 
                                                           VerticalAlignment="Top" AdornmentsPosition="TopAndBottom" AdornmentMargin="7.5,3,7.5,3"  Visible="True" x:Name="Inflation_Adorn" >
                                

                            </syncfusion:ChartAdornmentInfo>
                        </syncfusion:ChartSeries.AdornmentsInfo>
                    </syncfusion:ChartSeries>

                </syncfusion:ChartArea>
            </syncfusion:Chart>
        </Grid>
    <layout:SampleLayoutWindow.UserOptionsLayout>
        <!--Other Controls to provide dynamic property settings for chart control-->
        <Grid>
            <Grid.DataContext>
                <local:RangeAreaChartViewModel/>
            </Grid.DataContext>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="2" Grid.Column="0" Text="DataLabels" HorizontalAlignment="Left" FontWeight="SemiBold"/>

            <Grid Margin="0,10,0,20" Grid.Row="3" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Text="ShowDataLabels"/>
                <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding ShowDataLabels, ElementName=Inflation, Mode=TwoWay}"/>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="AdornmentsPosition"/>
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Source={StaticResource adornmentsPosition}}" SelectedItem="{Binding AdornmentsPosition, ElementName=Inflation_Adorn, Mode=TwoWay}"/>


                <TextBlock Grid.Row="2" Grid.Column="0" Text="HorizontalAlignment"/>
                <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Source={StaticResource horizontalAlignment}}" SelectedItem="{Binding HorizontalAlignment, ElementName=Inflation_Adorn, Mode=TwoWay}"/>

                <TextBlock Grid.Row="3" Grid.Column="0" Text="VerticalAlignment"/>
                <ComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Source={StaticResource verticalAlignment}}" SelectedItem="{Binding VerticalAlignment, ElementName=Inflation_Adorn, Mode=TwoWay}"/>

            </Grid>


            <TextBlock Grid.Row="0" Grid.Column="0" Text="Palette" HorizontalAlignment="Left" FontWeight="SemiBold"/>
            <Grid Margin="0,10,0,20" Grid.Row="1" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>

                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock Grid.Row="1" Grid.Column="0" Text="Palette"/>
                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding PaletteCollection}" SelectedItem="{Binding Palette, ElementName=AreaColorModel, Mode=TwoWay}"/>
            </Grid>

        </Grid>
    </layout:SampleLayoutWindow.UserOptionsLayout>
</layout:SampleLayoutWindow>
