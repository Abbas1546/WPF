<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlternatingGridBackground" xml:space="preserve">
    <value>グリッドの背景を交互に </value>
  </data>
  <data name="AlternatingGridBackgrounDirection" xml:space="preserve">
    <value>グリッドの背景の方向を交互に </value>
  </data>
  <data name="AlternatingGridBackgrounMode" xml:space="preserve">
    <value>グリッドの背景モードを交互に </value>
  </data>
  <data name="Analog" xml:space="preserve">
    <value>アナログ </value>
  </data>
  <data name="AnimateSeriesonebyone" xml:space="preserve">
    <value>つずつアニメーションシリーズのいずれか </value>
  </data>
  <data name="AnimationOption" xml:space="preserve">
    <value>アニメーションオプション </value>
  </data>
  <data name="hhh" xml:space="preserve">
    <value>外観 </value>
  </data>
  <data name="Area" xml:space="preserve">
    <value>エリア </value>
  </data>
  <data name="AutoSetRange" xml:space="preserve">
    <value>オートは、範囲を設定 </value>
  </data>
  <data name="AxisHeader" xml:space="preserve">
    <value>軸ヘッダー </value>
  </data>
  <data name="AxisPosition" xml:space="preserve">
    <value>軸位置 </value>
  </data>
  <data name="AxisType" xml:space="preserve">
    <value>軸タイプ </value>
  </data>
  <data name="Background" xml:space="preserve">
    <value>背景 </value>
  </data>
  <data name="Bar" xml:space="preserve">
    <value>バー </value>
  </data>
  <data name="BorderBrush" xml:space="preserve">
    <value>国境ブラシ </value>
  </data>
  <data name="BorderThickness" xml:space="preserve">
    <value>境界線の太さ </value>
  </data>
  <data name="BoxAndWhisker" xml:space="preserve">
    <value>箱ヒゲ </value>
  </data>
  <data name="Bubble" xml:space="preserve">
    <value>バブル </value>
  </data>
  <data name="Candle" xml:space="preserve">
    <value>キャンドル </value>
  </data>
  <data name="ChangeType" xml:space="preserve">
    <value>タイプの変更 </value>
  </data>
  <data name="ChartArea" xml:space="preserve">
    <value>グラフエリア </value>
  </data>
  <data name="ChartAreaLegend" xml:space="preserve">
    <value>グラフエリアの伝説 </value>
  </data>
  <data name="ChartAxis" xml:space="preserve">
    <value>チャートの軸 </value>
  </data>
  <data name="ChartLegend" xml:space="preserve">
    <value>チャート凡例 </value>
  </data>
  <data name="ChartProperties" xml:space="preserve">
    <value>グラフのプロパティ </value>
  </data>
  <data name="ChartSeries" xml:space="preserve">
    <value>チャートシリーズ </value>
  </data>
  <data name="Chart Type1" xml:space="preserve">
    <value>グラフの種類</value>
  </data>
  <data name="ChartVisualStyle" xml:space="preserve">
    <value>チャートビジュアルスタイル </value>
  </data>
  <data name="CheckBoxVisibility" xml:space="preserve">
    <value>チェックボックスの可視性 </value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>クローズ </value>
  </data>
  <data name="Colorful" xml:space="preserve">
    <value>カラフル </value>
  </data>
  <data name="ColorPalette" xml:space="preserve">
    <value>カラーパレット </value>
  </data>
  <data name="Column" xml:space="preserve">
    <value>列 </value>
  </data>
  <data name="contextMenuPalettes" xml:space="preserve">
    <value>コンテキストメニューパレット </value>
  </data>
  <data name="contextMenuSeries" xml:space="preserve">
    <value>コンテキストメニューシリーズ </value>
  </data>
  <data name="contextMenuZoomAll" xml:space="preserve">
    <value>コンテキストメニューズームすべて </value>
  </data>
  <data name="contextMenuZooming" xml:space="preserve">
    <value>コンテキストメニューズーム </value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>コピー </value>
  </data>
  <data name="CornerRadius" xml:space="preserve">
    <value>コーナー半径 </value>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>カスタム </value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>データ </value>
  </data>
  <data name="DateTimeInterval" xml:space="preserve">
    <value>日付の時間間隔 </value>
  </data>
  <data name="DateTimeRange" xml:space="preserve">
    <value>日付時刻範囲 </value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>デフォルト </value>
  </data>
  <data name="DefaultAlpha" xml:space="preserve">
    <value>デフォルトのアルファ </value>
  </data>
  <data name="DesiredIntervalCount" xml:space="preserve">
    <value>インターバルカウントを希望 </value>
  </data>
  <data name="Doughnut" xml:space="preserve">
    <value>ドーナツ </value>
  </data>
  <data name="EarthTone" xml:space="preserve">
    <value>地球トーン </value>
  </data>
  <data name="EdgeLabelDrawingMode" xml:space="preserve">
    <value>モードを描画するエッジラベル </value>
  </data>
  <data name="EmptyPointsInterior" xml:space="preserve">
    <value>空ポイントインテリア </value>
  </data>
  <data name="EmptyPointsStyle" xml:space="preserve">
    <value>空ポイントスタイル </value>
  </data>
  <data name="EnableAnimation" xml:space="preserve">
    <value>アニメーションを有効にする </value>
  </data>
  <data name="EnableContextMenu" xml:space="preserve">
    <value>有効にするコンテキストメニュー </value>
  </data>
  <data name="EnableZooming" xml:space="preserve">
    <value>ズーム有効にする </value>
  </data>
  <data name="EnableZoomOnScroll" xml:space="preserve">
    <value>スクロールでズーム有効にする </value>
  </data>
  <data name="FastColumn" xml:space="preserve">
    <value>高速列 </value>
  </data>
  <data name="FastHiLoOpenClose" xml:space="preserve">
    <value>高速ハイローオープンクローズ </value>
  </data>
  <data name="FastLine" xml:space="preserve">
    <value>ファーストライン </value>
  </data>
  <data name="FastScatter" xml:space="preserve">
    <value>高速散布 </value>
  </data>
  <data name="FastStackingColumn" xml:space="preserve">
    <value>高速列をスタッキング </value>
  </data>
  <data name="Foreground" xml:space="preserve">
    <value>前景 </value>
  </data>
  <data name="Funnel" xml:space="preserve">
    <value>ファンネル </value>
  </data>
  <data name="Gantt" xml:space="preserve">
    <value>ガント </value>
  </data>
  <data name="Gradient" xml:space="preserve">
    <value>勾配 </value>
  </data>
  <data name="Grayscale" xml:space="preserve">
    <value>グレースケール </value>
  </data>
  <data name="GridBackground" xml:space="preserve">
    <value>グリッドの背景 </value>
  </data>
  <data name="GridRegionProperties" xml:space="preserve">
    <value>グリッドリージョンのプロパティ </value>
  </data>
  <data name="Header" xml:space="preserve">
    <value>ヘッダー</value>
  </data>
  <data name="HeaderAlignment" xml:space="preserve">
    <value>ヘッダーの配置 </value>
  </data>
  <data name="HidePartialLabels" xml:space="preserve">
    <value>隠す部分ラベル </value>
  </data>
  <data name="HiLo" xml:space="preserve">
    <value>ハイロー </value>
  </data>
  <data name="HiLoArea" xml:space="preserve">
    <value>ハイローエリアは、 </value>
  </data>
  <data name="HiLoOpenClose" xml:space="preserve">
    <value>ハイロークローズ開きます </value>
  </data>
  <data name="Histogram" xml:space="preserve">
    <value>ヒストグラム </value>
  </data>
  <data name="IconVisibility" xml:space="preserve">
    <value>アイコンの可視性 </value>
  </data>
  <data name="InteractiveFeatures" xml:space="preserve">
    <value>対話機能 </value>
  </data>
  <data name="Interior" xml:space="preserve">
    <value>インテリア </value>
  </data>
  <data name="IntersectAction" xml:space="preserve">
    <value>交差アクション </value>
  </data>
  <data name="Interval" xml:space="preserve">
    <value>間隔 </value>
  </data>
  <data name="IsLograthimic" xml:space="preserve">
    <value>は対数 </value>
  </data>
  <data name="IsRotated" xml:space="preserve">
    <value>回転を指定します </value>
  </data>
  <data name="IsSorted" xml:space="preserve">
    <value>日付を指定します </value>
  </data>
  <data name="IsVisibleOnLegend" xml:space="preserve">
    <value>凡例に表示されている </value>
  </data>
  <data name="IsZoomable" xml:space="preserve">
    <value>れズーム可能な </value>
  </data>
  <data name="Kagi" xml:space="preserve">
    <value>鍵 </value>
  </data>
  <data name="LabelBackground" xml:space="preserve">
    <value>ラベルの背景 </value>
  </data>
  <data name="LabelBorderBrush" xml:space="preserve">
    <value>ラベルの枠線のブラシ </value>
  </data>
  <data name="LabelBorderThickness" xml:space="preserve">
    <value>ラベルの枠線の太さ </value>
  </data>
  <data name="LabelCornerRadius" xml:space="preserve">
    <value>ラベルコーナー半径 </value>
  </data>
  <data name="LabelDateTimeFormat" xml:space="preserve">
    <value>ラベルの日付時刻形式 </value>
  </data>
  <data name="LabelForeground" xml:space="preserve">
    <value>ラベル前景 </value>
  </data>
  <data name="LabelFormat" xml:space="preserve">
    <value>ラベルの書式 </value>
  </data>
  <data name="LabelRotateAngle" xml:space="preserve">
    <value>ラベルは角を回転させる </value>
  </data>
  <data name="LabelSettings" xml:space="preserve">
    <value>ラベル設定 </value>
  </data>
  <data name="LabelsMode" xml:space="preserve">
    <value>ラベルモード </value>
  </data>
  <data name="LagrathimicRange" xml:space="preserve">
    <value>対数レンジ </value>
  </data>
  <data name="Legend" xml:space="preserve">
    <value>伝説 </value>
  </data>
  <data name="LegendIcon" xml:space="preserve">
    <value>凡例アイコン </value>
  </data>
  <data name="LegendLabel" xml:space="preserve">
    <value>凡例ラベル </value>
  </data>
  <data name="LegendPosition" xml:space="preserve">
    <value>凡例の位置 </value>
  </data>
  <data name="LegendWindowCancel" xml:space="preserve">
    <value>[凡例]ウィンドウキャンセル </value>
  </data>
  <data name="LegendWindowCheckBox" xml:space="preserve">
    <value>[凡例]ウィンドウのチェックボックス </value>
  </data>
  <data name="LegendWindowIcon" xml:space="preserve">
    <value>凡例ウィンドウのアイコン </value>
  </data>
  <data name="LegendWindowOK" xml:space="preserve">
    <value>[OK]を[凡例]ウィンドウ </value>
  </data>
  <data name="LegendWindowTitle" xml:space="preserve">
    <value>凡例ウィンドウのタイトル </value>
  </data>
  <data name="Line" xml:space="preserve">
    <value>ライン </value>
  </data>
  <data name="LineStroke" xml:space="preserve">
    <value>ラインストローク </value>
  </data>
  <data name="LograthimicBase" xml:space="preserve">
    <value>対数の底 </value>
  </data>
  <data name="LograthimicRange" xml:space="preserve">
    <value>対数レンジ </value>
  </data>
  <data name="Margin" xml:space="preserve">
    <value>マージン </value>
  </data>
  <data name="Nature" xml:space="preserve">
    <value>自然 </value>
  </data>
  <data name="Office2007Black" xml:space="preserve">
    <value>オフィス 2007のブラック </value>
  </data>
  <data name="Office2007Blue" xml:space="preserve">
    <value>オフィス 2007のブルー </value>
  </data>
  <data name="Office2007Silver" xml:space="preserve">
    <value>オフィス 2007のシルバー </value>
  </data>
  <data name="OpposedPosition" xml:space="preserve">
    <value>対向する位置 </value>
  </data>
  <data name="Orientation" xml:space="preserve">
    <value>オリエンテーション </value>
  </data>
  <data name="Origin" xml:space="preserve">
    <value>起源 </value>
  </data>
  <data name="Padding" xml:space="preserve">
    <value>パディング </value>
  </data>
  <data name="Palette1" xml:space="preserve">
    <value>パレット1 </value>
  </data>
  <data name="Palette2" xml:space="preserve">
    <value>パレット2 </value>
  </data>
  <data name="MaroonRed" xml:space="preserve">
    <value>あずき色の赤 </value>
  </data>
  <data name="Palette4" xml:space="preserve">
    <value>パレット4 </value>
  </data>
  <data name="MixedViolet" xml:space="preserve">
    <value>混在バイオレット </value>
  </data>
  <data name="Palette6" xml:space="preserve">
    <value>パレット6 </value>
  </data>
  <data name="ChocolateOrange" xml:space="preserve">
    <value>チョコレートオレンジ </value>
  </data>
  <data name="MixedFantasy" xml:space="preserve">
    <value>混在ファンタジー </value>
  </data>
  <data name="Palette9" xml:space="preserve">
    <value>パレット9 </value>
  </data>
  <data name="BlueScale" xml:space="preserve">
    <value>ブルースケール </value>
  </data>
  <data name="Palette11" xml:space="preserve">
    <value>パレット11 </value>
  </data>
  <data name="MixedGray" xml:space="preserve">
    <value>グレー混在</value>
  </data>
  <data name="BlueGray" xml:space="preserve">
    <value>ブルーグレー </value>
  </data>
  <data name="DefaultDark" xml:space="preserve">
    <value>デフォルト·ダーク</value>
  </data>
  <data name="GreenScale" xml:space="preserve">
    <value>グリーンスケール </value>
  </data>
  <data name="CoolBlueScale" xml:space="preserve">
    <value>クールブルースケール </value>
  </data>
  <data name="Metro" xml:space="preserve">
    <value>メトロ </value>
  </data>
  <data name="Panning" xml:space="preserve">
    <value>パン </value>
  </data>
  <data name="Pastel" xml:space="preserve">
    <value>パステル </value>
  </data>
  <data name="Pie" xml:space="preserve">
    <value>パイ </value>
  </data>
  <data name="PointAndFigure" xml:space="preserve">
    <value>ポイントと図 </value>
  </data>
  <data name="Polar" xml:space="preserve">
    <value>極性の </value>
  </data>
  <data name="printDialogAdvanced" xml:space="preserve">
    <value>印刷ダイアログ詳細 </value>
  </data>
  <data name="printDialogBWMode" xml:space="preserve">
    <value>印刷ダイアログ帯域幅モード </value>
  </data>
  <data name="printDialogCancel" xml:space="preserve">
    <value>印刷ダイアログをキャンセル </value>
  </data>
  <data name="printDialogColorMode" xml:space="preserve">
    <value>印刷ダイアログカラーモード </value>
  </data>
  <data name="printDialogPrint" xml:space="preserve">
    <value>印刷ダイアログの印刷 </value>
  </data>
  <data name="printDialogPrintStretch" xml:space="preserve">
    <value>印刷ダイアログの印刷ストレッチ </value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>プロパティ </value>
  </data>
  <data name="Pyramid" xml:space="preserve">
    <value>ピラミッド </value>
  </data>
  <data name="Radar" xml:space="preserve">
    <value>レーダー </value>
  </data>
  <data name="Range" xml:space="preserve">
    <value>レンジ </value>
  </data>
  <data name="RangeAndInterval" xml:space="preserve">
    <value>範囲と間隔 </value>
  </data>
  <data name="RangeArea" xml:space="preserve">
    <value>範囲エリア </value>
  </data>
  <data name="RangeCalculationMode" xml:space="preserve">
    <value>レンジ計算モード </value>
  </data>
  <data name="RangeColumn" xml:space="preserve">
    <value>範囲の列 </value>
  </data>
  <data name="RangePadding" xml:space="preserve">
    <value>レンジパディング </value>
  </data>
  <data name="Renko" xml:space="preserve">
    <value>蓮子 </value>
  </data>
  <data name="ResetZoom" xml:space="preserve">
    <value>リセットズーム </value>
  </data>
  <data name="RotatedSpline" xml:space="preserve">
    <value>回転スプライン </value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>名前を付けて保存 </value>
  </data>
  <data name="Scatter" xml:space="preserve">
    <value>スキャッター </value>
  </data>
  <data name="SelectChartArea" xml:space="preserve">
    <value>選択グラフエリア </value>
  </data>
  <data name="SelectChartAxis" xml:space="preserve">
    <value>選択グラフ軸 </value>
  </data>
  <data name="SelectChartLegend" xml:space="preserve">
    <value>選択チャートの凡例 </value>
  </data>
  <data name="SelectChartSeries" xml:space="preserve">
    <value>選択チャートシリーズ </value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>設定 </value>
  </data>
  <data name="ShowSeriesEmptyPoints" xml:space="preserve">
    <value>地図シリーズ空のポイント </value>
  </data>
  <data name="ShowSymbol" xml:space="preserve">
    <value>地図記号 </value>
  </data>
  <data name="SmallTickLinesStroke" xml:space="preserve">
    <value>小目盛り線ストローク </value>
  </data>
  <data name="SmallTickSize" xml:space="preserve">
    <value>小ティックサイズ </value>
  </data>
  <data name="SmallTicksPerInterval" xml:space="preserve">
    <value>間隔ごとに小目盛り </value>
  </data>
  <data name="Spline" xml:space="preserve">
    <value>スプライン </value>
  </data>
  <data name="SplineArea" xml:space="preserve">
    <value>スプラインエリア </value>
  </data>
  <data name="StackingArea" xml:space="preserve">
    <value>スタッキングエリア </value>
  </data>
  <data name="StackingArea100" xml:space="preserve">
    <value>スタッキングエリア100 </value>
  </data>
  <data name="StackingBar" xml:space="preserve">
    <value>スタッキングバー </value>
  </data>
  <data name="StackingBar100" xml:space="preserve">
    <value>スタッキングバー100 </value>
  </data>
  <data name="StackingColumn" xml:space="preserve">
    <value>スタッキング列 </value>
  </data>
  <data name="StackingColumn100" xml:space="preserve">
    <value>スタッキングカラム100 </value>
  </data>
  <data name="StackingLine" xml:space="preserve">
    <value>スタッキングライン </value>
  </data>
  <data name="StepArea" xml:space="preserve">
    <value>ステップエリア </value>
  </data>
  <data name="StepLine" xml:space="preserve">
    <value>ステップライン </value>
  </data>
  <data name="Stroke" xml:space="preserve">
    <value>ストローク </value>
  </data>
  <data name="StrokeThickness" xml:space="preserve">
    <value>線の太さ </value>
  </data>
  <data name="style" xml:space="preserve">
    <value>スタイル </value>
  </data>
  <data name="ThreeLineBreak" xml:space="preserve">
    <value>スリーラインブレーク </value>
  </data>
  <data name="TickLineStroke" xml:space="preserve">
    <value>ティックラインストローク </value>
  </data>
  <data name="TickSize" xml:space="preserve">
    <value>ティックサイズ </value>
  </data>
  <data name="ToolbarLegend" xml:space="preserve">
    <value>ツールバーの凡例 </value>
  </data>
  <data name="ToolbarPrint" xml:space="preserve">
    <value>ツールバーの印刷 </value>
  </data>
  <data name="ToolbarSwitchPrint" xml:space="preserve">
    <value>ツールバーのスイッチを印刷 </value>
  </data>
  <data name="Tornado" xml:space="preserve">
    <value>竜巻 </value>
  </data>
  <data name="Triad" xml:space="preserve">
    <value>トライアド </value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>タイプ </value>
  </data>
  <data name="Value Type" xml:space="preserve">
    <value>値を入力します。 </value>
  </data>
  <data name="ValueType" xml:space="preserve">
    <value>値を入力します。 </value>
  </data>
  <data name="VisualStyle" xml:space="preserve">
    <value>ビジュアルスタイル </value>
  </data>
  <data name="WarmCold" xml:space="preserve">
    <value>ウォームコールド </value>
  </data>
  <data name="ZoomIn" xml:space="preserve">
    <value>ズームイン </value>
  </data>
  <data name="ZoomOut" xml:space="preserve">
    <value>ズームアウト </value>
  </data>
  <data name="Chart" xml:space="preserve">
    <value>チャート</value>
  </data>
  <data name="ChartPropertiesDialogTitle" xml:space="preserve">
    <value>ダイアログ[グラフのプロパティ]</value>
  </data>
  <data name="FastBar" xml:space="preserve">
    <value>高速バー</value>
  </data>
  <data name="Appearence" xml:space="preserve">
    <value>外観</value>
  </data>
  <data name="Header2" xml:space="preserve">
    <value>ヘッダー</value>
  </data>
  <data name="Appearance" xml:space="preserve">
    <value>外観</value>
  </data>
  <data name="ChartType" xml:space="preserve">
    <value>チャートの種類</value>
  </data>
  <data name="ChartTypeHeader" xml:space="preserve">
    <value>グラフの種類のヘッダ</value>
  </data>
  <data name="HeaderSettings" xml:space="preserve">
    <value>ヘッダの設定</value>
  </data>
</root>