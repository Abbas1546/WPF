<layout:SampleLayoutWindow x:Class="ChartAnimations.Window1"
                           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"    
                           xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
                           xmlns:local="clr-namespace:ChartAnimations"
                           xmlns:layout="clr-namespace:Syncfusion.Windows.SampleLayout;assembly=Syncfusion.Chart.Wpf.SampleLayout"
                           xmlns:loc="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF" 
                           xmlns:inter="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                           UserOptionsVisibility="Collapsed" Title="Chart Animations Demo">
    <layout:SampleLayoutWindow.Resources>
        <ResourceDictionary>
            <local:StepValueProvider x:Key="StepValue"/>
            <!--Defining Column Template-->
            <DataTemplate x:Key="ColumnTemplate">
                <Canvas Name="myCanvas">
                    <Grid Name="OuterGrid" Canvas.Left="{Binding X}" Width="{Binding Width}" Height="{Binding ElementName=myCanvas, Path=ActualHeight}" >
                        <Border Name="ColumnRect" 
                  VerticalAlignment="Bottom" 
                  Width="{Binding Width}" Height="{Binding Height}"
                   Background="{Binding Interior}">
                            <Border.Triggers>
                                <EventTrigger SourceName="ColumnRect" RoutedEvent="Border.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard >
                                            <syncfusion:GenericDoubleAnimation
                                            Storyboard.TargetName="ColumnRect" 
                                            Storyboard.TargetProperty="Height"
                                            From="0" 
                                            To="{Binding Height}"
                                            Duration="00:00:03"
                                            StepValueProvider="{StaticResource StepValue}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>
                    </Grid>
                </Canvas>
            </DataTemplate>
            <!--Defining Line Template 1-->
            <DataTemplate x:Key="LineTemplate1">
                <Canvas>
                    <Line Name="Line" X1="{Binding X1}" Y1="{Binding Y1}" StrokeThickness="{Binding StrokeThickness}" Stroke="{Binding Interior}">
                        <Line.Triggers>
                            <EventTrigger SourceName="Line" RoutedEvent="Line.Loaded">
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="HoldEnd" >
                                        <DoubleAnimation Storyboard.TargetName="Line" Storyboard.TargetProperty="X1" From="200" To="{Binding X1}" Duration="00:00:02">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Line" Storyboard.TargetProperty="X2" From="200" To="{Binding X2}" Duration="00:00:02">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard FillBehavior="HoldEnd" >
                                        <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetName="Line" 
                                    Storyboard.TargetProperty="Y1"
                                    Duration="00:00:04" AutoReverse="False">
                                            <LinearDoubleKeyFrame Value="100" KeyTime="0:0:0" />
                                            <LinearDoubleKeyFrame Value="100" KeyTime="0:0:2" />
                                            <LinearDoubleKeyFrame Value="{Binding Y1}" KeyTime="0:0:4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                    Storyboard.TargetName="Line" 
                                    Storyboard.TargetProperty="Y2"
                                    Duration="00:00:04" AutoReverse="False">
                                            <LinearDoubleKeyFrame Value="100" KeyTime="0:0:0" />
                                            <LinearDoubleKeyFrame Value="100" KeyTime="0:0:2" />
                                            <LinearDoubleKeyFrame Value="{Binding Y2}" KeyTime="0:0:4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Line.Triggers>
                    </Line>
                </Canvas>
            </DataTemplate>
            <!--Defining Line Template 2-->
            <DataTemplate x:Key="LineTemplate2">
                <Canvas>
                    <Line Name="Line" X1="{Binding X1}" Y1="{Binding Y1}" Stroke="{Binding Interior}" StrokeThickness="{Binding StrokeThickness}">
                        <Line.Triggers>
                            <EventTrigger x:Name="trigger1" SourceName="Line" RoutedEvent="Line.Loaded" >
                                <BeginStoryboard>
                                    <Storyboard Duration="00:00:02" Storyboard.TargetName="Line" 
                                    Storyboard.TargetProperty="X2">
                                        <DoubleAnimationUsingKeyFrames Duration="00:00:02" AutoReverse="False">
                                            <LinearDoubleKeyFrame Value="0" KeyTime="00:00:00"/>
                                            <LinearDoubleKeyFrame Value="{Binding X2}" KeyTime="00:00:02"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>

                                <BeginStoryboard>
                                    <Storyboard Duration="00:00:02" Storyboard.TargetName="Line" 
                                    Storyboard.TargetProperty="Y2">
                                        <DoubleAnimationUsingKeyFrames Duration="00:00:02" AutoReverse="False">
                                            <LinearDoubleKeyFrame Value="0" KeyTime="00:00:00"/>
                                            <LinearDoubleKeyFrame Value="{Binding Y2}" KeyTime="00:00:02"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Line.Triggers>
                    </Line>
                </Canvas>
            </DataTemplate>
            <local:OffsetXCalculator x:Key="myOffsetXCalculator"/>
            <local:OffsetYCalculator x:Key="myOffsetYCalculator"/>
            <local:PieAnimationValueProvider x:Key="myPieAnimationStepValueProvider"/>
            <!--Defining Pie Template 2-->
            <DataTemplate x:Key="PieTemplate">
                <Grid>
                    <Path Name="PiePath" Stroke="{Binding Stroke}" StrokeThickness="{Binding StrokeThickness}" Fill="{Binding Interior}" 
          Data="{Binding Geometry}" ToolTip="{Binding ToolTip}">
                        <Path.RenderTransform>
                            <TranslateTransform x:Name="myTranslateTransform" X="1" Y="1"></TranslateTransform>
                        </Path.RenderTransform>
                        <Path.Triggers>
                            <EventTrigger SourceName="PiePath" RoutedEvent="Path.Loaded">
                                <BeginStoryboard>
                                    <Storyboard Name="mySB">
                                        <syncfusion:GenericDoubleAnimation
                                Storyboard.TargetName="myTranslateTransform" 
                                Storyboard.TargetProperty="X"
                                From="{Binding Converter={StaticResource myOffsetXCalculator}}"
                                To="0"
                                Duration="00:00:02"
                                 StepValueProvider="{StaticResource myPieAnimationStepValueProvider}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <syncfusion:GenericDoubleAnimation
                                Storyboard.TargetName="myTranslateTransform" 
                                Storyboard.TargetProperty="Y"
                                From="{Binding Converter={StaticResource myOffsetYCalculator}}"
                                To="0"
                                Duration="00:00:02"
                                 StepValueProvider="{StaticResource myPieAnimationStepValueProvider}"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Path.Triggers>
                    </Path>
                </Grid>
            </DataTemplate>
            <Style x:Key="LineStyle">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=AnimTypes1, Mode=TwoWay}" Value="0">
                        <Setter Property="syncfusion:ChartSeries.Template" Value="{StaticResource LineTemplate1}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=AnimTypes1, Mode=TwoWay}" Value="1">
                        <Setter Property="syncfusion:ChartSeries.Template" Value="{StaticResource LineTemplate2}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </layout:SampleLayoutWindow.Resources>
        <Grid>
            <Grid.DataContext>
                <local:ChartAnimationsViewModel/>
            </Grid.DataContext>
            <!--Tabcontrol hosting Chart controls in second Row of the Grid-->
            <TabControl x:Name="TAB">
                <TabItem Header="Column" Width="70">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.8*" />
                            <ColumnDefinition Width="0.2*"/>
                        </Grid.ColumnDefinitions>
                        <!--Chart declaration-->
                        <syncfusion:Chart Name="ColumnChart" >
                           
                            <!--Chart area to present chart segments-->
                            <syncfusion:ChartArea >

                                <syncfusion:ChartArea.GridHeader>
                                    <TextBlock FontSize="20" FontWeight="Regular" FontFamily="Segoe UI" Margin="0,0,0,20">Monthly Sales Analysis</TextBlock>
                                </syncfusion:ChartArea.GridHeader>
                                <syncfusion:ChartArea.Legend>
                                    <syncfusion:ChartLegend syncfusion:Chart.Dock="Bottom"/>
                                </syncfusion:ChartArea.Legend>
                                
                                <!--X axis declaration with required property settings-->
                                <syncfusion:ChartArea.PrimaryAxis>
                                    <syncfusion:ChartAxis Interval="1" Header="Month"/>
                                </syncfusion:ChartArea.PrimaryAxis>
                                <!--Y axis declaration with required property settings-->
                                <syncfusion:ChartArea.SecondaryAxis>
                                    <syncfusion:ChartAxis Interval="20" Header="Sales in millions" IsAutoSetRange="False" Range="0,100" />
                                </syncfusion:ChartArea.SecondaryAxis>
                                <!--ChartSeries declaration with required property settings-->
                                <syncfusion:ChartSeries Name="ColumnSeries1" Label="Hardwares" StrokeThickness="0" Template="{StaticResource ColumnTemplate}" DataSource="{Binding Values1}" BindingPathX="Month" BindingPathsY="NetUp"/>
                                <syncfusion:ChartSeries Name="ColumnSeries2" Label="Softwares" StrokeThickness="0" Template="{StaticResource ColumnTemplate}" DataSource="{Binding Values2}" BindingPathX="Month" BindingPathsY="NetUp"/>
                            </syncfusion:ChartArea>
                        </syncfusion:Chart>
                        <!--Other Controls to provide dynamic property animations for chart control-->
                        <Grid Grid.Column="1" VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock FontWeight="SemiBold">Animation Types</TextBlock>
                            <ListBox Grid.Row="1" SelectedIndex="0" Name="AnimTypes" Margin="0,20,0,0">
                                <ListBoxItem>Bounce</ListBoxItem>
                                <ListBoxItem>Elastic</ListBoxItem>
                                <ListBoxItem>Back</ListBoxItem>
                                <ListBoxItem>Cubic</ListBoxItem>
                                <ListBoxItem>Quintic</ListBoxItem>
                            </ListBox>
                        </Grid>
                    </Grid>
                </TabItem>

                <TabItem Header="Line" Width="70">
                    <Grid>
                        <Grid.DataContext>
                            <local:ChartAnimationsViewModel/>
                        </Grid.DataContext>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.8*" />
                            <ColumnDefinition Width="0.2*"/>
                        </Grid.ColumnDefinitions>
                        <!--Chart declaration-->
                        <syncfusion:Chart Name="LineChart" Margin="10">
                            <syncfusion:Chart.Header>
                                <TextBlock FontSize="20" FontWeight="Regular" FontFamily="Segoe UI">Monthly Sales Analysis</TextBlock>
                            </syncfusion:Chart.Header>
                            <!--Chart area to present chart segments-->
                            <syncfusion:ChartArea >
                                <syncfusion:ChartArea.Legend>
                                    <syncfusion:ChartLegend  Margin="0,0,0,20"></syncfusion:ChartLegend>
                                </syncfusion:ChartArea.Legend>
                                <!--X axis declaration with required property settings-->
                                <syncfusion:ChartArea.PrimaryAxis>
                                    <syncfusion:ChartAxis Interval="1" Header="Months" />
                                </syncfusion:ChartArea.PrimaryAxis>
                                <!--Y axis declaration with required property settings-->
                                <syncfusion:ChartArea.SecondaryAxis>
                                    <syncfusion:ChartAxis Interval="20" Header="Sales in millions"  IsAutoSetRange="False" Range="0,100"/>
                                </syncfusion:ChartArea.SecondaryAxis>
                                <!--ChartSeries declaration with required property settings-->
                                <syncfusion:ChartSeries Name="LineSeries1" Style="{StaticResource LineStyle}" Type="Line" Label="Hardwares" StrokeThickness="2" DataSource="{Binding Values1}" BindingPathX="Month" BindingPathsY="NetUp"/>
                                <syncfusion:ChartSeries Name="LineSeries2" Style="{StaticResource LineStyle}" Type="Line" Label="Softwares" StrokeThickness="2" DataSource="{Binding Values2}" BindingPathX="Month" BindingPathsY="NetUp"/>
                            </syncfusion:ChartArea>
                        </syncfusion:Chart>
                        <!--Other Controls to provide dynamic property animations for chart control-->
                        <Grid Grid.Column="1" VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock FontWeight="SemiBold">Animation Types</TextBlock>
                            <ListBox Grid.Row="1" SelectedIndex="0" Name="AnimTypes1" Margin="0,20,0,0">
                                <ListBoxItem>Animation 1</ListBoxItem>
                                <ListBoxItem>Animation 2</ListBoxItem>
                            </ListBox>
                        </Grid>
                    </Grid>
                </TabItem>

                <TabItem Header="Pie" Width="70">
                    <Grid Margin="20" >
                        <!--Chart declaration-->
                        <syncfusion:Chart Name="ChartPie">
                            <syncfusion:Chart.Header>
                                <TextBlock FontSize="20" FontWeight="Regular" FontFamily="Segoe UI">Monthly Sales Analysis</TextBlock>
                            </syncfusion:Chart.Header>
                            <!--Chart area to present chart segments-->
                            <syncfusion:ChartArea BorderThickness="0.75">
                                <syncfusion:ChartArea.Legend>
                                    <syncfusion:ChartLegend IconHeight="20" IconWidth="10"></syncfusion:ChartLegend>
                                </syncfusion:ChartArea.Legend>
                                <syncfusion:ChartArea.ColorModel>
                                    <syncfusion:ChartStyleModel Palette="Default"/>
                                </syncfusion:ChartArea.ColorModel>
                                <!--ChartSeries declaration with required property settings-->
                                <syncfusion:ChartSeries Name="SeriesA" Type="Pie" Stroke="White" Template="{StaticResource PieTemplate}" LegendIcon="SeriesType" DataSource="{Binding Values1}" BindingPathX="Month" BindingPathsY="NetUp"/>
                            </syncfusion:ChartArea>
                        </syncfusion:Chart>
                    </Grid>
                </TabItem>

            </TabControl>
        </Grid>
    <inter:Interaction.Behaviors>
        <local:ChartAnimationsBehavior/>
    </inter:Interaction.Behaviors>
</layout:SampleLayoutWindow>
