<layout:SampleLayoutWindow x:Class="AxisDoubleRangeDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:local="clr-namespace:AxisDoubleRangeDemo"
        xmlns:library="clr-namespace:System;assembly=mscorlib"
        xmlns:layout="clr-namespace:Syncfusion.Windows.SampleLayout;assembly=Syncfusion.Chart.Wpf.SampleLayout"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        Title="Double ValueType Demo">
    <Window.Resources>
        <local:VisbilityConverter x:Key="visbilityConverter"/>
        <ObjectDataProvider x:Key="ChartTypesCollection" MethodName="GetValues" ObjectType="{x:Type library:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:ChartTypes"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="RangePaddingCollection" MethodName="GetValues" ObjectType="{x:Type library:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:ChartRangePaddingType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="RangeCalculationModeCollection" MethodName="GetValues" ObjectType="{x:Type library:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:RangeCalculationMode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <DataTemplate x:Key="adornment">
            <Grid>
                <Rectangle Stroke="#FFAEAEAE" RadiusY="5" RadiusX="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFDADADA" Offset="1"/>
                            <GradientStop Color="White"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBlock  Margin="7.5,3,7.5,3" TextWrapping="Wrap" Text="{Binding}" FontSize="12" Foreground="#FF585858" FontFamily="Segoe UI Symbol" FontWeight="Regular" VerticalAlignment="Center" HorizontalAlignment="Center">
                </TextBlock>
            </Grid>
        </DataTemplate>
    </Window.Resources>
        <Grid>
            <Grid.DataContext>
                <local:DataViewModel/>
            </Grid.DataContext>
            <syncfusion:Chart Name="Chart">
                <syncfusion:Chart.Header>
                    <TextBlock FontFamily="Segoe UI"  FontSize="20">Grain Product Sales Analysis</TextBlock>
                </syncfusion:Chart.Header>
                <syncfusion:ChartArea IsContextMenuEnabled="False">
                    <syncfusion:ChartArea.ColorModel>
                        <syncfusion:ChartStyleModel x:Name="AreaColorModel" Palette="MixedFantasy"/>
                    </syncfusion:ChartArea.ColorModel>
                    <syncfusion:ChartArea.PrimaryAxis>
                    <syncfusion:ChartAxis x:Name="PrimaryAxis"  RangePadding="{Binding ElementName=RangePadding, Path=SelectedItem, Mode=TwoWay}" RangeCalculationMode="{Binding ElementName=RangeCalculationMode,Path=SelectedItem,Mode=TwoWay}" EdgeLabelsDrawingMode="Fit" AdditionalPadding="{Binding ElementName=AdditionalPadding, Path=Text, Mode=TwoWay}">
                            <syncfusion:ChartAxis.Header>
                                <TextBlock Text="Grains" FontFamily="Segoe UI"/>
                            </syncfusion:ChartAxis.Header>
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.PrimaryAxis>
                    <syncfusion:ChartArea.SecondaryAxis>
                        <syncfusion:ChartAxis x:Name="SecondaryAxis" DesiredIntervalsCount="{Binding ElementName=desint, Path=Text, Mode=TwoWay}"  IsAutoSetRange="{Binding ElementName=isauto, Path=IsChecked, Mode=TwoWay}" DoubleDisplayUnitAlignment="{Binding ElementName=alncmb, Path=SelectedItem, Mode=TwoWay}" DoubleDisplayUnit="{Binding ElementName=dblCmb, Path=SelectedItem, Mode=TwoWay}" EnableSmartAxisLabel="True" Interval="{Binding ElementName=interv, Path=SelectedItem, Mode=TwoWay}">
                            <syncfusion:ChartAxis.Header>
                                <TextBlock Text="Production in Tons" FontFamily="Segoe UI"/>
                            </syncfusion:ChartAxis.Header>
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.SecondaryAxis>
                    <syncfusion:ChartSeries Name="GrainSeries" Type="Line" EnableEffects="True" StrokeThickness="3"  SegmentWidthMode="Fixed" IsIndexed="True" DataSource="{Binding SalesDetails}" BindingPathX="GrainName" BindingPathsY="QuantityOfGrains">
                        <syncfusion:ChartSeries.AdornmentsInfo>
                            <syncfusion:ChartAdornmentInfo Symbol="Custom" 
                                                           SymbolWidth="15" 
                                                           SymbolHeight="15"
                                                           SymbolInterior="#FFF09609" 
                                                           HorizontalAlignment="Center" 
                                                           VerticalAlignment="Top" AdornmentsPosition="TopAndBottom"  Visible="True" x:Name="Inflation_Adorn">
                                <syncfusion:ChartAdornmentInfo.SymbolTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Ellipse Fill="#FFF09609" StrokeThickness="3" Stroke="White" Height="20" Width="20" HorizontalAlignment="Left" VerticalAlignment="Top"></Ellipse>
                                            <ContentPresenter Content="{Binding Content}"  Margin="0,15,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"/>
                                        </Grid>
                                    </DataTemplate>
                                </syncfusion:ChartAdornmentInfo.SymbolTemplate>
                                <syncfusion:ChartAdornmentInfo.LabelTemplate>
                                    <DataTemplate>
                                        <TextBlock Text=""/>
                                    </DataTemplate>
                                </syncfusion:ChartAdornmentInfo.LabelTemplate>


                            </syncfusion:ChartAdornmentInfo>
                        </syncfusion:ChartSeries.AdornmentsInfo>
                        
                    </syncfusion:ChartSeries>
                </syncfusion:ChartArea>
            </syncfusion:Chart>
        </Grid>
    <layout:SampleLayoutWindow.UserOptionsLayout>
        <Grid>
            <Grid.DataContext>
                <local:DataViewModel/>
            </Grid.DataContext>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition />
                <RowDefinition/>
                <RowDefinition />
                <RowDefinition/>
                <RowDefinition />
                <RowDefinition/>
                <RowDefinition />
                <RowDefinition/>
                <RowDefinition />
                <RowDefinition/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>           
           
                    

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Auto Set Range"/>
                    <CheckBox Grid.Row="1" Grid.Column="1" IsChecked="True" Name="isauto"/>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Range"/>
            <ComboBox Grid.Row="2" Grid.Column="1" Name="rangecmb" SelectedItem="{Binding ElementName=SecondaryAxis, Path=Range, Mode=TwoWay}"/>

            <TextBlock Grid.Row="3" Grid.Column="0" Text="Interval"/>
            
            <ComboBox Grid.Row="3" Grid.Column="1" Text="" Name="interv"></ComboBox>

                <!--<TextBlock Grid.Row="3" Grid.Column="0" Text="Desired Interval"/>
                <TextBox Grid.Row="3" Grid.Column="1" Text="6" Name="desint"/>-->

            <TextBlock Grid.Row="4" Grid.Column="0" Text="Enable Smart Axis Label" />
            <CheckBox IsChecked="{Binding ElementName=SecondaryAxis, Path=EnableSmartAxisLabel, Mode=TwoWay}" Grid.Row="4" Grid.Column="1" Name="smartcheck"/>

            <TextBlock Grid.Row="5" Grid.Column="0" Text="Double Display Unit"/>
            <ComboBox Grid.Row="5" Grid.Column="1" Name="dblCmb" ItemsSource="{Binding doubleunitcollection}"/>

            <TextBlock Grid.Row="6" Grid.Column="0" Text="Double Display Unit Alignment"/>
            <ComboBox Grid.Row="6" Grid.Column="1" SelectedIndex="0" Name="alncmb" ItemsSource="{Binding doubleunitalign}"/>
            
            <TextBlock Grid.Row="0" Grid.Column="0" Text="Select Data Source"/>
            <ComboBox Grid.Row="0" Grid.Column="1" Name="serdata" SelectedIndex="0"/>

            <!--<TextBlock Grid.Row="7" Grid.Column="0" Text="Range Padding"/>
            <ComboBox Grid.Row="7" Grid.Column="1" SelectedIndex="0" Name="RangePadding" ItemsSource="{Binding Source={StaticResource RangePaddingCollection}}"/>-->

            <TextBlock Grid.Row="7" Grid.Column="0" Text="Range Calculation Mode"/>
                    <ComboBox Grid.Row="7" Grid.Column="1" Name="RangeCalculationMode" ItemsSource="{Binding Source={StaticResource RangeCalculationModeCollection}}"/>

            <!--<TextBlock Grid.Row="8" Grid.Column="0" Text="Additional Padding"/>
            <TextBox Grid.Row="8" Grid.Column="1" Name="AdditionalPadding" Text="00,00"/>-->

        </Grid>
               
    </layout:SampleLayoutWindow.UserOptionsLayout>
    <i:Interaction.Behaviors>
        <local:SampleBehavior/>
    </i:Interaction.Behaviors>
</layout:SampleLayoutWindow >
