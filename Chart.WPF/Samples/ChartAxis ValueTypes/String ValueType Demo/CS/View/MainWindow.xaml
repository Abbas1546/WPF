<layout:SampleLayoutWindow x:Class="AxisStringValueTypeDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:local="clr-namespace:AxisStringValueTypeDemo"
        xmlns:library="clr-namespace:System;assembly=mscorlib"
        xmlns:layout="clr-namespace:Syncfusion.Windows.SampleLayout;assembly=Syncfusion.Chart.Wpf.SampleLayout"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        Icon="App.ico"  WindowStartupLocation="CenterScreen" 
        Title="String ValueType Demo">
    <Window.Resources>
        <local:VisbilityConverter x:Key="visbilityConverter"/>
        <ObjectDataProvider x:Key="ChartTypesCollection" MethodName="GetValues" ObjectType="{x:Type library:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:ChartTypes"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="RangePaddingCollection" MethodName="GetValues" ObjectType="{x:Type library:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:ChartRangePaddingType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="RangeCalculationModeCollection" MethodName="GetValues" ObjectType="{x:Type library:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="syncfusion:RangeCalculationMode"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>        
    </Window.Resources>
        <Grid>
            <Grid.DataContext>
                <local:DataViewModel/>
            </Grid.DataContext>
            <syncfusion:Chart Name="Chart">
                <syncfusion:ChartArea IsContextMenuEnabled="False">
				 <syncfusion:ChartArea.GridHeader>
                    <TextBlock FontFamily="Segoe UI" FontSize="20">Car BrandWise Sales Comparision Analysis</TextBlock>
                </syncfusion:ChartArea.GridHeader>
                    <syncfusion:ChartArea.ColorModel>
                        <syncfusion:ChartStyleModel x:Name="AreaColorModel" Palette="DefaultDark"/>
                    </syncfusion:ChartArea.ColorModel>
                    <syncfusion:ChartArea.PrimaryAxis>
                    <syncfusion:ChartAxis x:Name="PrimaryAxis" ValueType="String" EdgeLabelsDrawingMode="Fit" IntersectAction="MultipleRows" IsAutoSetRange="{Binding ElementName=IsAutoSetRangeState,Path=IsChecked,Mode=TwoWay}" RangePadding="{Binding ElementName=RangePaddingCollection,Path=SelectedValue,Mode=TwoWay}" RangeCalculationMode="{Binding ElementName=RangeCalculationMode,Path=SelectedItem,Mode=TwoWay}">
                            <syncfusion:ChartAxis.Header>
                                <TextBlock Text="Car Model" FontFamily="Segoe UI" FontWeight="SemiBold" FontSize="14"/>
                            </syncfusion:ChartAxis.Header>
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.PrimaryAxis>
                    <syncfusion:ChartArea.SecondaryAxis>
                        <syncfusion:ChartAxis x:Name="SecondaryAxis">
                            <syncfusion:ChartAxis.Header>
                                <TextBlock Text="Sales Amount in Millions (USD)" FontFamily="Segoe UI" FontWeight="SemiBold" FontSize="14"/>
                            </syncfusion:ChartAxis.Header>
                        </syncfusion:ChartAxis>
                    </syncfusion:ChartArea.SecondaryAxis>
                    <syncfusion:ChartSeries Label="BrandWise Sales" Name="CarSeries" Type="{Binding ElementName=SeriesTypesCollection,Path=SelectedValue,Mode=TwoWay}" SegmentWidthMode="Fixed" IsIndexed="{Binding ElementName=IsIndexedState,Path=IsChecked,Mode=TwoWay}" DataSource="{Binding SalesDetails}" BindingPathX="CarBrand" BindingPathsY="SalesAmount,AverageRaise,ProfitPercentage,InvestedAmount">                                                  
                    </syncfusion:ChartSeries>
                </syncfusion:ChartArea>
            </syncfusion:Chart>
        </Grid>
    <layout:SampleLayoutWindow.UserOptionsLayout>
        <Grid>
            <Grid.DataContext>
                <local:DataViewModel/>
            </Grid.DataContext>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="0" Name="IsAutoSetRange" Text="Auto Set Range"/>
            <CheckBox Grid.Row="0" Grid.Column="1" Name="IsAutoSetRangeState" IsChecked="True" />

            <TextBlock  Name="CustomRange" Grid.Row="1" Grid.Column="0" Text="Range" />
            <TextBox Name="StringRangeInput" Grid.Row="1" Grid.Column="1" Text="{Binding ElementName=PrimaryAxis,Path=Range,Mode=TwoWay}"/>

            <TextBlock  Name="CustomInterval" Grid.Row="2" Grid.Column="0" Text="Interval" />
            <TextBox Name="Interval" Grid.Row="2"  Grid.Column="1"/>

            <TextBlock Name="CustomDesiredIntervalsCount" Grid.Row="3" Grid.Column="0" Text="Desired Interval Count"/>
            <TextBox Name="DesiredIntervalCount" Grid.Row="3" Grid.Column="1" Text="{Binding ElementName=PrimaryAxis,Path=DesiredIntervalsCount,Mode=TwoWay}"/>

            <TextBlock Grid.Row="6" Grid.Column="0" Text="Range Calculation Mode"/>
            <ComboBox Grid.Row="6" Grid.Column="1" Name="RangeCalculationMode" ItemsSource="{Binding Source={StaticResource RangeCalculationModeCollection}}"/>

        </Grid>

    </layout:SampleLayoutWindow.UserOptionsLayout>
    <i:Interaction.Behaviors>
        <local:SampleBehavior/>
    </i:Interaction.Behaviors>
</layout:SampleLayoutWindow >

